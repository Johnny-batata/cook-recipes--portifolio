{"version":3,"sources":["helper/alertMsg.js","action/index.js","pages/login.jsx","animations/index.js","components/searchBar.jsx","components/header.jsx","action/action.js","components/cards.jsx","components/footer.jsx","components/ButtonCategories.jsx","components/Loader.jsx","pages/comidas.jsx","pages/bebidas.jsx","pages/telaDePerfil.jsx","helper/dictionaryApi.js","components/Instructions.jsx","components/Ingredients.jsx","components/SharedFavorites.jsx","components/DetailsHeader.jsx","components/CarouselCards.jsx","components/CardsMeals.jsx","components/CardsDrinks.jsx","components/InstrutionVideo.jsx","components/Modal.jsx","pages/Detalhes.jsx","pages/explorarComidas/ExplorarBebidasComidas.jsx","pages/telaDeExplorar.jsx","components/ingredientCards.jsx","pages/explorarIngredientes.jsx","services/servicesApi.js","pages/explorarArea.jsx","pages/Progresso.jsx","pages/telaReceitasFavoritas.jsx","pages/notFound.jsx","components/DoneRecipes.jsx","pages/ReceitasFeitas.jsx","App.js","serviceWorker.js","reducers/userLogin.js","reducers/foodCategories.js","reducers/drinkCategories.js","reducers/isSearchBar.js","reducers/exploreScreen.js","reducers/recipeDetails.js","reducers/foodArea.js","reducers/index.js","store/index.js","index.js","images/Group26.svg","images/shareIcon.svg","images/blackHeartIcon.svg","images/whiteHeartIcon.svg","images/profileIcon.svg","images/searchIcon.svg","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","images/image8.png"],"names":["invokeAlert","alert","msg","ERROR","getAllDrinksRecipes","recipes","type","getAllFoodRecipes","fetchFoodRecipes","name","dispatch","fetch","then","response","json","allFood","meals","slice","fetchDrinksRecipes","allDrinksRecipes","drinks","drinksRecipes","fetchFoodRecipesByIngredients","ingrediente","allFoodRecipes","fetchDrinksRecipesByIngredient","login","state","userEmail","userPassword","errors","errorEmail","errorPassword","btnDisable","validate","handleChange","bind","handleClick","validade","target","value","this","setState","props","userEmailDispatch","history","localStorage","setItem","JSON","stringify","email","push","length","test","className","data-testid","placeholder","onFocus","onChange","e","motion","section","initial","opacity","animate","disabled","onClick","Component","connect","addEmail","animationScreen","in","x","out","end","animationModal","scale","container","hidden","visible","transition","delayChildren","staggerChildren","item","y","duration","SearchBar","inputSearch","radioValue","id","fetchApi","fetchApiByIngredient","fetchApiByFirstLetter","fetchApiDrinks","fetchApiDrinksByingredient","fetchApiDrinksByFirstLetter","location","handleFoodAndDrink","fetchByName","fetchByingrdient","fetchByFirstLetter","console","log","htmlFor","primeiraletra","Recipes","fetchFoodRecipesByfirstLetter","letter","allDrinksRecipesByFirsLetter","fetchDrinksRecipesByFirstLetter","Header","isSearchBar","header","verify","searchBarTrue","href","src","searchIcon","alt","title","searchBar","includes","to","profileIcon","replace","searchBarOn","undefined","pathname","substring","charAt","toUpperCase","isLoading","bool","loader","getSearchBarResponse","getIngredients","getFoodDetails","mealsDetails","isLink","boolean","link","startRecipe","isStart","checkPage","isDrink","fetchFilterFoodByCategories","category","foodCategories","fetchFoodDetails","foodDetails","fetchDrinkDetails","drinkDetails","drinksDetails","Cards","img","index","url","div","variants","Group26","Card","Img","variant","Body","Title","Footer","drinkIcon","exploreIcon","mealIcon","ButtonCategories","isToggle","toggle","nameCategory","filter","filterAll","getCategories","map","strCategory","key","foodByCategories","Loader","Comidas","isRedirect","categories","updateState","apiFoodCategories","dispatchFoodRecipes","hasSearchBar","check","some","el","idMeal","getFoodCategories","elem","match","exit","btnClass","measl","path","strMealThumb","strMeal","allFoodCategories","getAllFoodCategories","setTimeout","Bebidas","dispatchDrinks","apiDrinkCategories","drinksCategories","drinkByCategories","drink","idDrink","strDrinkThumb","strDrink","drinkCategories","allDrinkCategories","getAllDrinkCategories","getDrinkByCategories","fetchFilterDrinkByCategories","TelaDePerfil","buttonsRender","info","parse","getItem","cleanLocalStorage","clear","dictionaryFood","Id","Name","DrinkAlternate","Category","Area","Thumb","Tags","Youtube","Source","ImageSource","CreativeCommonsConfirmed","dateModified","Instructions","Ingredients","dictionaryDrink","IBA","Alcoholic","Glass","InstructionsES","InstructionsDE","InstructionsFR","InstructionsIT","InstructionsZH_HANS","InstructionsZH_HANT","ImageAttribution","identification","obj","data","dictionary","param","func","ourState","element","document","getElementById","checked","ingredient","checkIngredient","width","height","viewbox","points","recipeDetails","SharedFavorites","favIcon","favIconColor","whiteHeartIcon","handleFavClick","renderState","details","page","keyName","recovery","blackHeartIcon","recipe","area","alcoholicOrNot","image","favoriteKeys","copy","window","scrollTo","shareIcon","DetailsHeader","headerContainer","goBack","CarouselCards","subTitle","useState","setIsRedirect","Subtitle","CardsMeals","settings","dots","infinite","speed","slidesToShow","slidesToScroll","sliceMeals","CardsDrinks","sliceDrinks","strAlcoholic","InstrutionVideo","controls","children","handleOutsideClick","onKeyPress","role","isActive","Smile","Detalhes","currentId","startedRecipe","finishedRecipe","handleFetch","redirectForInProgress","checkStorage","btnStartRecipes","btnContinueRecipe","params","reboot","doneRecipes","forEach","inProgressRecipes","checkInProgressRecipes","mealsKeys","Object","keys","drinksKeys","cocktails","ExplorarComidasBebidas","handleApi","verifyToRedirect","getDetailsRecipe","should","PAGE_LOCATION","renderButtons","a","param2","ramdomRecipeData","fetchRamdomRecipe","TelaDeExplorar","IngredientCards","imgContainer","items","explorarIngredientes","idIngredient","strIngredient","strIngredient1","getApiIngredient","renderElements","exploreIngredient","ingredientDetails","ingredients1","ingredients2","fetchFoodRecipesByArea","country","ExplorarArea","fetchCountry","dispatchFoodRecipesByArea","strArea","foodArea","AreaDetails","Progresso","recipesLength","count","allIngredients","saveDoneRecipes","finishRecipe","countRecipesAllLength","classList","remove","add","currentDate","Date","toLocaleDateString","doneDate","tags","split","inProgress","total","TelaReceitasFavoritas","favoriteList","isFavorite","getFavoriteRecipes","favoriteRecipes","filterFavorite","islink","notFound","DoneRecipes","handleFilterFoods","handleFilterDrinks","handleFilterAll","allRecipes","Text","ReceitasFeitas","style","App","AnimatePresence","exitBeforeEnter","component","NotFound","explorarArea","ExplorarIngredientes","Explorarcomidas","render","Receitas","Favoritas","Explorar","Perfil","exact","Boolean","hostname","INITIAL_STATE","userLogin","action","foodDatails","drinkDatails","ingredients","rootReducers","combineReducers","store","createStore","rootReducer","compose","applyMiddleware","thunk","devToolsExtension","f","ReactDOM","basename","process","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.0a38fe0a.chunk.js","sourcesContent":["function invokeAlert(alert, msg) {\n  alert(msg);\n}\n\nexport default invokeAlert;\n","import invokeAlert from '../helper/alertMsg';\n\nexport const ERROR = 'Sinto muito, não encontramos nenhuma receita para esses filtros.';\nexport const USER_EMAIL = 'USER_EMAIL';\nexport const IS_LOADING = 'IS_LOADING';\nexport const AREA = 'AREA';\nexport const INGREDIENTS = 'INGREDIENTS';\nexport const IS_SEARCHBAR = 'IS_SEARCHBAR';\nexport const ALL_FOOD_RECIPES = 'ALL_FOOD_RECIPES';\nexport const FOOD_BY_CATEGORIES = 'FOOD_BY_CATEGORIES';\nexport const ALL_DRINKS_RECIPES = 'ALL_DRINKS_RECIPES';\nexport const DRINK_BY_CATEGORIES = 'DRINK_BY_CATEGORIES';\nexport const RECIPE_DETAILS_FOOD = 'RECIPE_DETAILS_FOOD';\nexport const RECIPE_DETAILS_DRINK = 'RECIPE_DETAILS_DRINK';\nexport const FAV_ICON = 'FAV_ICON';\nexport const FAV_ICON_COLOR = 'FAV_ICON_COLOR';\nexport const START_RECIPE = 'START_RECIPE';\nexport const CHECK_PAGE = 'CHECK_PAGE';\nexport const CHECK_INGREDIENTS = 'CHECK_INGREDIENTS';\nexport const LINK = 'LINK';\n\nexport const addFavicon = (favIcon) => ({ type: FAV_ICON, favIcon });\n\nexport const faviconColor = (color) => ({ type: FAV_ICON_COLOR, color });\n\nexport const addEmail = (email) => ({ type: USER_EMAIL, email });\n\nexport const isLoading = () => ({ type: IS_LOADING });\n\nexport const getAllDrinksRecipes = (recipes) => ({\n  type: ALL_DRINKS_RECIPES, recipes });\n\nexport const getAllFoodRecipes = (recipes) => ({\n  type: ALL_FOOD_RECIPES, recipes });\n\nexport const fetchFoodRecipes = (name = '') => (dispatch) => {\n  dispatch(isLoading());\n  const maxRecipes = 12;\n  fetch(`https://www.themealdb.com/api/json/v1/1/search.php?s=${name}`)\n    .then((response) => response.json())\n    .then((allFood) => {\n      if (allFood.meals === null) {\n        return invokeAlert(\n          alert, ERROR,\n        );\n      }\n      const recipes = allFood.meals.slice(0, maxRecipes);\n      dispatch(getAllFoodRecipes(recipes));\n    });\n};\n\nexport const fetchDrinksRecipes = (name = '') => (dispatch) => {\n  const maxRecipes = 12;\n  dispatch(isLoading());\n  fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${name}`)\n    .then((response) => response.json())\n    .then((allDrinksRecipes) => {\n      if (allDrinksRecipes.drinks === null) {\n        return invokeAlert(\n          alert, ERROR,\n        );\n      }\n      const drinksRecipes = allDrinksRecipes.drinks.slice(0, maxRecipes);\n      dispatch(getAllDrinksRecipes(drinksRecipes));\n    });\n};\n\nexport const fetchFoodRecipesByIngredients = (ingrediente = '') => (dispatch) => {\n  const maxRecipes = 12;\n  dispatch(isLoading());\n  fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${ingrediente}`)\n    .then((response) => response.json())\n    .then((allFoodRecipes) => {\n      if (allFoodRecipes.meals === null) {\n        return invokeAlert(\n          alert, ERROR,\n        );\n      }\n      const recipes = allFoodRecipes.meals.slice(0, maxRecipes);\n      dispatch(getAllFoodRecipes(recipes));\n    });\n};\n\nexport const fetchFoodRecipesByfirstLetter = (primeiraletra = '') => (dispatch) => {\n  const maxRecipes = 12;\n  dispatch(isLoading());\n  fetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${primeiraletra}`)\n    .then((response) => response.json())\n    .then((Recipes) => {\n      if (Recipes.meals === null) {\n        return invokeAlert(\n          alert, ERROR,\n        );\n      }\n      const recipes = Recipes.meals.slice(0, maxRecipes);\n      dispatch(getAllFoodRecipes(recipes));\n    });\n};\n\nexport const fetchDrinksRecipesByIngredient = (ingrediente = '') => (dispatch) => {\n  const maxRecipes = 12;\n  dispatch(isLoading());\n  fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${ingrediente}`)\n    .then((response) => response.json())\n    .then((allDrinksRecipes) => {\n      if (allDrinksRecipes.drinks === null) {\n        return invokeAlert(\n          alert, ERROR,\n        );\n      }\n      const drinks = allDrinksRecipes.drinks.slice(0, maxRecipes);\n      dispatch(getAllDrinksRecipes(drinks));\n    });\n};\n\nexport const fetchDrinksRecipesByFirstLetter = (letter = 'a') => (dispatch) => {\n  const maxRecipes = 12;\n  dispatch(isLoading());\n  fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${letter}`)\n    .then((response) => response.json())\n    .then((allDrinksRecipesByFirsLetter) => {\n      if (allDrinksRecipesByFirsLetter.drinks === null) {\n        return invokeAlert(\n          alert, ERROR,\n        );\n      }\n      const drinksRecipes = allDrinksRecipesByFirsLetter.drinks.slice(0, maxRecipes);\n      dispatch(getAllDrinksRecipes(drinksRecipes));\n    });\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { motion } from 'framer-motion';\nimport { connect } from 'react-redux';\nimport { HiOutlineMail, HiOutlineLockClosed } from 'react-icons/hi';\nimport { BiCheckCircle } from 'react-icons/bi';\nimport { addEmail } from '../action';\nimport '../css/login.css';\n\nclass login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userEmail: '',\n      userPassword: '',\n      errors: {\n        errorEmail: true,\n        errorPassword: true,\n      },\n      btnDisable: true,\n      validate: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.validade = this.validade.bind(this);\n  }\n\n  handleChange({ target: { value, name } }) {\n    this.setState({ [name]: value });\n    this.validade(this.state);\n  }\n\n  handleClick() {\n    const { userEmailDispatch, history } = this.props;\n    const { userEmail } = this.state;\n\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n    localStorage.setItem('user', JSON.stringify({ email: userEmail }));\n\n    this.setState({ userEmail: '', userPassword: '' });\n    history.push('/comidas');\n\n    userEmailDispatch(userEmail);\n  }\n\n  validade(state) {\n    const lengthPassword = 5;\n\n    if (state.userPassword.length > lengthPassword && state.errors.errorEmail === false) {\n      return this.setState({ btnDisable: false,\n        errors: { ...state.errors, errorPassword: false } });\n    }\n\n    if (/(\\w+[0-9]*)+@\\w+\\.\\w+/.test(state.userEmail)) {\n      return this.setState({ errors: { ...state.errors, errorEmail: false } });\n    }\n  }\n\n  render() {\n    const { userEmail, userPassword, btnDisable, errors, validate } = this.state;\n    return (\n      <section className=\"form-main\">\n        <section className=\"form-container\">\n          <section className=\"logo-container\">\n            <span className=\"logo\">Larica</span>\n          </section>\n          <form className=\"form-login\">\n            <h1>Bem Vindo!</h1>\n            <span className=\"form-subtitle\">Por favor insira sua conta aqui</span>\n            <section className=\"sec-email-password\">\n              <HiOutlineMail className=\"icon\" />\n              <input\n                className=\"login-input\"\n                data-testid=\"email-input\"\n                type=\"email\"\n                name=\"userEmail\"\n                placeholder=\"Email\"\n                value={ userEmail }\n                onFocus={ () => this.setState({ validate: true }) }\n                onChange={ (e) => this.handleChange(e) }\n              />\n            </section>\n            <section className=\"sec-email-password\">\n              <HiOutlineLockClosed className=\"icon\" />\n              <input\n                className=\"login-input\"\n                data-testid=\"password-input\"\n                type=\"password\"\n                name=\"userPassword\"\n                placeholder=\"Senha\"\n                value={ userPassword }\n                onChange={ (e) => this.handleChange(e) }\n              />\n            </section>\n            {\n              validate && (\n                <motion.section\n                  className=\"form-validate\"\n                  initial={ { opacity: 0 } }\n                  animate={ { opacity: 1 } }\n                >\n                  <span className=\"validate-title\">Validação</span>\n                  <div>\n                    <BiCheckCircle\n                      className={ errors.errorEmail ? 'error-check' : 'error-checked' }\n                    />\n                    <span\n                      className={ errors.errorEmail ? 'check-true' : 'check-false' }\n                    >\n                      Insira um email válido\n                    </span>\n                  </div>\n                  <div>\n                    <BiCheckCircle\n                      className={ errors.errorPassword ? 'error-check' : 'error-checked' }\n                    />\n                    <span\n                      className={ errors.errorPassword ? 'check-true' : 'check-false' }\n                    >\n                      Insira uma senha com mais de 6 caracteres\n                    </span>\n                  </div>\n                </motion.section>\n              )\n            }\n            <button\n              className={ btnDisable ? 'form-btn-disable' : 'form-btn-enable' }\n              data-testid=\"login-submit-btn\"\n              type=\"button\"\n              disabled={ btnDisable }\n              onClick={ () => this.handleClick() }\n            >\n              Entrar\n            </button>\n          </form>\n        </section>\n      </section>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  userEmailDispatch: (email) => dispatch(addEmail(email)),\n});\n\nlogin.propTypes = {\n  userEmailDispatch: PropTypes.func.isRequired,\n  history: PropTypes.shape.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(login);\n","export const animationScreen = {\n  in: {\n    opacity: 1,\n    x: -300,\n  },\n  out: {\n    opacity: 0,\n    x: 300,\n  },\n  end: {\n    x: 0,\n    opacity: 1,\n  },\n};\n\nexport const animationModal = {\n  in: {\n    scale: 1.1,\n  },\n};\n\nexport const container = {\n  hidden: { opacity: 1, scale: 0 },\n  visible: {\n    opacity: 1,\n    scale: 1,\n    transition: {\n      delayChildren: 0.3,\n      staggerChildren: 0.2,\n    },\n  },\n};\n\nexport const item = {\n  hidden: { y: 20, opacity: 0 },\n  visible: {\n    y: 0,\n    opacity: 1,\n  },\n};\n\nexport const transition = {\n  duration: 0.5,\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport PropTypes from 'prop-types';\nimport invokeAlert from '../helper/alertMsg';\n\nimport '../css/searchBar.css';\n\nimport { fetchFoodRecipes, fetchFoodRecipesByIngredients,\n  fetchFoodRecipesByfirstLetter, fetchDrinksRecipesByIngredient,\n  fetchDrinksRecipes,\n  fetchDrinksRecipesByFirstLetter } from '../action/index';\n\nclass SearchBar extends Component {\n  constructor() {\n    super();\n    this.state = {\n      inputSearch: '',\n      radioValue: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange({ target: { id, type, value } }) {\n    if (type === 'radio') {\n      return this.setState({ radioValue: id });\n    }\n    this.setState({ inputSearch: value });\n  }\n\n  handleClick() {\n    const { fetchApi, fetchApiByIngredient, fetchApiByFirstLetter,\n      fetchApiDrinks, fetchApiDrinksByingredient,\n      fetchApiDrinksByFirstLetter } = this.props;\n    const { location } = this.props;\n\n    if (location === '/comidas') {\n      return this.handleFoodAndDrink(fetchApi,\n        fetchApiByIngredient, fetchApiByFirstLetter);\n    }\n    if (location === '/bebidas') {\n      return this.handleFoodAndDrink(\n        fetchApiDrinks, fetchApiDrinksByingredient, fetchApiDrinksByFirstLetter,\n      );\n    }\n  }\n\n  handleFoodAndDrink(fetchByName, fetchByingrdient, fetchByFirstLetter) {\n    const { inputSearch, radioValue } = this.state;\n\n    if (!radioValue || radioValue === 'nome') {\n      return fetchByName(inputSearch);\n    }\n\n    if (radioValue === 'ingrediente') {\n      console.log('ingredient');\n      return fetchByingrdient(inputSearch);\n    }\n\n    if (radioValue === 'primeira-letra') {\n      if (!inputSearch || inputSearch.length > 1) {\n        return invokeAlert(alert, 'Sua busca deve conter somente 1 (um) caracter');\n      }\n      return fetchByFirstLetter(inputSearch);\n    }\n  }\n\n  render() {\n    return (\n      <section className=\"search-bar-content\">\n        <div className=\"div-search-input\">\n          <AiOutlineSearch className=\"search-icon\" />\n          <input\n            className=\"search-input\"\n            id=\"search\"\n            type=\"text\"\n            data-testid=\"search-input\"\n            placeholder=\"Busca\"\n            onChange={ this.handleChange }\n          />\n        </div>\n        <div className=\"filter-radio\">\n          <label className=\"filter-label\" htmlFor=\"ingrediente\">\n            <input\n              className=\"filter-input\"\n              id=\"ingrediente\"\n              type=\"radio\"\n              onChange={ this.handleChange }\n              name=\"radio-button\"\n              data-testid=\"ingredient-search-radio\"\n            />\n            Ingrediente\n          </label>\n          <label className=\"filter-label\" htmlFor=\"nome\">\n            <input\n              className=\"filter-input\"\n              id=\"nome\"\n              type=\"radio\"\n              onChange={ this.handleChange }\n              name=\"radio-button\"\n              data-testid=\"name-search-radio\"\n            />\n            Nome\n          </label>\n          <label className=\"filter-label\" htmlFor=\"primeira-letra\">\n            <input\n              className=\"filter-input\"\n              id=\"primeira-letra\"\n              type=\"radio\"\n              onChange={ this.handleChange }\n              data-testid=\"first-letter-search-radio\"\n              name=\"radio-button\"\n            />\n            Primeira-letra\n          </label>\n        </div>\n        <div className=\"btn-content\">\n          <button\n            className=\"btn-search\"\n            data-testid=\"exec-search-btn\"\n            type=\"button\"\n            onClick={ this.handleClick }\n          >\n            Buscar\n          </button>\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchApi: (e) => dispatch(fetchFoodRecipes(e)), // apagar\n  fetchApiByIngredient: (e) => dispatch(fetchFoodRecipesByIngredients(e)),\n  fetchApiByFirstLetter: (e) => dispatch(fetchFoodRecipesByfirstLetter(e)),\n  fetchApiDrinks: (e) => dispatch(fetchDrinksRecipes(e)),\n  fetchApiDrinksByFirstLetter: (e) => dispatch(fetchDrinksRecipesByFirstLetter(e)),\n  fetchApiDrinksByingredient: (e) => dispatch(fetchDrinksRecipesByIngredient(e)),\n\n});\n\nSearchBar.propTypes = {\n  fetchApi: PropTypes.func.isRequired,\n  fetchApiByIngredient: PropTypes.func.isRequired,\n  fetchApiByFirstLetter: PropTypes.func.isRequired,\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(SearchBar);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport profileIcon from '../images/profileIcon.svg';\nimport searchIcon from '../images/searchIcon.svg';\nimport SearchBar from './searchBar';\nimport '../css/header.css';\n// import boots\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isSearchBar: false,\n    };\n\n    this.header = this.header.bind(this);\n    this.verify = this.verify.bind(this);\n    this.searchBarTrue = this.searchBarTrue.bind(this);\n  }\n\n  verify() {\n    const { isSearchBar } = this.state;\n    if (isSearchBar === true) {\n      return this.setState({ isSearchBar: false });\n    }\n    return this.setState({ isSearchBar: true });\n  }\n\n  searchBarTrue() {\n    return (\n      <button className=\"btn-search-bar search-bar\" type=\"button\" onClick={ this.verify }>\n        <a href=\"#top\">\n          <img\n            className=\"search-top-btn\"\n            data-testid=\"search-top-btn\"\n            src={ searchIcon }\n            alt=\"search\"\n          />\n        </a>\n      </button>\n    );\n  }\n\n  header(title = 'Comidas', searchBar = true) {\n    if (title.includes('area')) {\n      title = 'Explorar/Origem';\n    }\n\n    if (title.includes('ingredientes') && title.includes('comidas')) {\n      title = 'Explorar/Ingredientes';\n    }\n\n    if (title.includes('Explorar') && title.includes('comidas')) {\n      title = 'Explorar/Comidas';\n    }\n    if (title.includes('ingredientes') && title.includes('bebidas')) {\n      title = 'Explorar/Ingredientes';\n    }\n    if (title.includes('Explorar') && title.includes('bebidas')) {\n      title = 'Explorar/Bebidas';\n    }\n    if (title.includes('feita')) {\n      title = 'Receitas/Feitas';\n    }\n    if (title.includes('favoritas')) {\n      title = 'Receitas/Favoritas';\n    }\n\n    return (\n      <section className=\"header-main\">\n        <header className=\"header\">\n          <div className=\"profile-div\">\n            <Link to=\"/perfil\">\n              <img\n                className=\"profile-icon\"\n                data-testid=\"profile-top-btn\"\n                src={ profileIcon }\n                alt=\"profileImagem\"\n              />\n            </Link>\n          </div>\n          <div className=\"page-title-div\">\n            <h1 data-testid=\"page-title\">{ title.replace('/', ' ') }</h1>\n          </div>\n          <div className=\"search-bar\">\n            {searchBar === true && this.searchBarTrue()}\n          </div>\n\n        </header>\n      </section>\n    );\n  }\n\n  render() {\n    const { isSearchBar } = this.state;\n    const { location, searchBarOn } = this.props;\n\n    return (\n      <div>\n        { location !== undefined\n        && this.header(location.pathname\n          .substring(1).charAt(0)\n          .toUpperCase() + location.pathname.substring(2), searchBarOn)}\n        {isSearchBar === true && <SearchBar location={ location.pathname } /> }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  searchBarOn: state.isSearchBar.searchBarOn,\n});\n\nHeader.propTypes = {\n  searchBar: PropTypes.shape.isRequired,\n  location: PropTypes.shape.isRequired,\n}.isRequired;\n\nexport default connect(mapStateToProps)(Header);\n","import {\n  LINK,\n  START_RECIPE,\n  IS_LOADING,\n  AREA,\n  INGREDIENTS,\n  IS_SEARCHBAR,\n  FOOD_BY_CATEGORIES,\n  DRINK_BY_CATEGORIES,\n  RECIPE_DETAILS_FOOD,\n  RECIPE_DETAILS_DRINK,\n  CHECK_PAGE,\n  CHECK_INGREDIENTS,\n} from './index';\n\nexport const ALL_FOOD_CATEGORIES = 'ALL_FOOD_CATEGORIES';\nexport const ALL_DRINK_CATEGORIES = 'ALL_DRINK_CATEGORIES';\n\nexport const isLoading = (bool) => ({ type: IS_LOADING, loader: bool });\n\nexport const getAllFoodCategories = (allFoodCategories) => ({\n  type: ALL_FOOD_CATEGORIES, allFoodCategories });\n\nexport const getAllDrinkCategories = (allDrinkCategories) => ({\n  type: ALL_DRINK_CATEGORIES, allDrinkCategories });\n\nexport const getSearchBarResponse = (searchBarOn) => ({\n  type: IS_SEARCHBAR, searchBarOn });\n\nexport const getIngredients = (ingrediente) => ({\n  type: INGREDIENTS, ingrediente });\n\nexport const getFoodByCategories = (meals) => ({\n  type: FOOD_BY_CATEGORIES, meals });\n\nexport const getFoodDetails = (mealsDetails) => ({\n  type: RECIPE_DETAILS_FOOD, mealsDetails });\n\nexport const getFoodArea = (AreaDetails) => ({\n  type: AREA, AreaDetails });\n\nexport const getDrinkByCategories = (drinks) => ({\n  type: DRINK_BY_CATEGORIES, drinks });\n\nexport const ingredients = (obj) => ({\n  type: CHECK_INGREDIENTS, ingredients: obj });\n\nexport const isLink = (boolean) => ({\n  type: LINK, link: boolean });\n\nexport const startRecipe = (boolean) => ({\n  type: START_RECIPE, isStart: boolean });\n\nexport const checkPage = (bool) => ({\n  type: CHECK_PAGE, isDrink: bool });\n\nexport const getDrinkDetails = (drinksDetails) => ({\n  type: RECIPE_DETAILS_DRINK, drinksDetails });\n\nexport const fetchApiFoodCategories = () => (dispatch) => {\n  const time = 1000;\n  dispatch(isLoading(true));\n  fetch('https://www.themealdb.com/api/json/v1/1/list.php?c=list')\n    .then((response) => response.json())\n    .then((allFoodCategories) => {\n      const maxCategories = 5;\n      const categories = allFoodCategories.meals.slice(0, maxCategories);\n      dispatch(getAllFoodCategories(categories));\n      setTimeout(() => {\n        dispatch(isLoading(false));\n      }, time);\n    });\n};\n\nexport const fetchApiDrinkCategories = () => (dispatch) => {\n  const time = 1000;\n  dispatch(isLoading(true));\n  fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list')\n    .then((response) => response.json())\n    .then((allDrinkCategories) => {\n      const maxCategories = 5;\n      const categories = allDrinkCategories.drinks.slice(0, maxCategories);\n      dispatch(getAllDrinkCategories(categories));\n      setTimeout(() => {\n        dispatch(isLoading(false));\n      }, time);\n    });\n};\n\nexport const fetchFilterFoodByCategories = (category) => (dispatch) => {\n  const maxRecipes = 12;\n  dispatch(isLoading());\n  fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`)\n    .then((response) => response.json())\n    .then((foodCategories) => {\n      const recipes = foodCategories.meals.slice(0, maxRecipes);\n      dispatch(getFoodByCategories(recipes));\n    });\n};\n\nexport const fetchFilterDrinkByCategories = (category) => (dispatch) => {\n  const maxRecipes = 12;\n  dispatch(isLoading());\n  fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${category}`)\n    .then((response) => response.json())\n    .then((drinkCategories) => {\n      const drinks = drinkCategories.drinks.slice(0, maxRecipes);\n      dispatch(getDrinkByCategories(drinks));\n    });\n};\n\nexport const fetchRamdomRecipe = (param = 'mealdb', param2 = 'meals') => (dispatch) => {\n  dispatch(isLoading());\n\n  fetch(`https://www.the${param}.com/api/json/v1/1/random.php`)\n    .then((response) => response.json())\n    .then((ramdomRecipeData) => {\n      dispatch(getFoodDetails(ramdomRecipeData[param2][0]));\n    });\n};\n\nexport const fetchFoodDetails = (id) => (dispatch) => {\n  dispatch(isLoading());\n  fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`)\n    .then((response) => response.json())\n    .then((foodDetails) => {\n      dispatch(getFoodDetails(foodDetails.meals[0]));\n      dispatch(checkPage(false));\n    });\n};\n\nexport const fetchByIngredient = (param) => (dispatch) => {\n  const maxRecipes = 12;\n  dispatch(isLoading());\n\n  fetch(`https://www.the${param}db.com/api/json/v1/1/list.php?i=list`)\n    .then((response) => response.json())\n    .then((ingredientDetails) => {\n      if (param === 'cocktail') {\n        const type = 'drinks';\n        const ingredients1 = ingredientDetails[type].slice(0, maxRecipes);\n        dispatch(getIngredients(ingredients1));\n      }\n      if (param === 'meal') {\n        const type = `${param}s`;\n        const ingredients2 = ingredientDetails[type].slice(0, maxRecipes);\n        dispatch(getIngredients(ingredients2));\n      }\n    });\n};\n\nexport const fetchDrinkDetails = (id) => (dispatch) => {\n  dispatch(isLoading());\n  fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`)\n    .then((response) => response.json())\n    .then((drinkDetails) => {\n      dispatch(getDrinkDetails(drinkDetails.drinks[0]));\n      dispatch(checkPage(true));\n    });\n};\n\nexport const fetchArea = () => (dispatch) => {\n  dispatch(isLoading());\n  fetch('https://www.themealdb.com/api/json/v1/1/list.php?a=list')\n    .then((response) => response.json())\n    .then((Area) => {\n      dispatch(getFoodArea(Area));\n    });\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from 'react-bootstrap/Card';\nimport { motion } from 'framer-motion';\nimport { Link } from 'react-router-dom';\nimport Group26 from '../images/Group26.svg';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../css/cards.css';\nimport { item } from '../animations';\n\nexport default function Cards({ id, img, title, index, url }) {\n  return (\n    <Link to={ `${url}/${id}` }>\n      <motion.div\n        className=\"principal-card-content\"\n        variants={ item }\n        data-testid={ `${index}-recipe-card` }\n      >\n        <div className=\"img-content\">\n          <img className=\"group-26\" src={ Group26 } alt={ Group26 } />\n          <div className=\"img-wrap\">\n            <Card.Img\n              className=\"principal-card-img\"\n              variant=\"top\"\n              src={ img }\n              data-testid={ `${index}-card-img` }\n            />\n          </div>\n        </div>\n        <Card.Body className=\"principal-card-body\">\n          <Card.Title\n            className=\"principal-card-title\"\n            data-testid={ `${index}-card-name` }\n          >\n            { title }\n          </Card.Title>\n        </Card.Body>\n      </motion.div>\n    </Link>\n  );\n}\n\nCards.propTypes = {\n  index: PropTypes.number.isRequired,\n  img: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport drinkIcon from '../images/drinkIcon.svg';\nimport exploreIcon from '../images/exploreIcon.svg';\nimport mealIcon from '../images/mealIcon.svg';\n\nimport '../css/footer.css';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <section className=\"footer-main\">\n        <footer data-testid=\"footer\" className=\"footer\">\n          <Link className=\"footer-btn\" to=\"/bebidas\">\n            <div className=\"footer-btn\">\n              <img\n                className=\"footer-icon\"\n                src={ drinkIcon }\n                alt=\"drink icon\"\n                data-testid=\"drinks-bottom-btn\"\n              />\n              <span className=\"footer-span\">Bebidas</span>\n            </div>\n          </Link>\n          <Link className=\"footer-btn\" to=\"/explorar\">\n            <div className=\"btn-explorer\">\n              <img\n                className=\"footer-icon explorer-icon\"\n                src={ exploreIcon }\n                alt=\"explorar\"\n                data-testid=\"explore-bottom-btn\"\n              />\n            </div>\n            <span className=\"footer-span footer-span-explorer\">Explorar</span>\n          </Link>\n          <Link to=\"/comidas\">\n            <div className=\"footer-btn\">\n              <img\n                className=\"footer-icon\"\n                src={ mealIcon }\n                alt=\"comidas\"\n                data-testid=\"food-bottom-btn\"\n              />\n              <span className=\"footer-span\">Comidas</span>\n            </div>\n          </Link>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchFilterFoodByCategories } from '../action/action';\nimport '../css/buttonCategories.css';\n\nclass ButtonCategories extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isToggle: false,\n      category: '',\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle(e, nameCategory) {\n    const { isToggle, category } = this.state;\n    const { filter, filterAll } = this.props;\n\n    if (e.target.value !== 'All') {\n      this.setState({ isToggle: true, category: nameCategory });\n      filter(nameCategory);\n    } else {\n      this.setState({ isToggle: false, category: '' });\n      filterAll();\n    }\n\n    if (e.target.value === category && isToggle === true) {\n      this.setState({ isToggle: false, category: '' });\n      filterAll();\n    }\n  }\n\n  render() {\n    const { getCategories } = this.props;\n    return (\n      <section className=\"btn-list-cards\">\n        <button\n          data-testid=\"All-category-filter\"\n          type=\"button\"\n          className=\"category-filter\"\n          onClick={ (e) => this.toggle(e, 'All') }\n          value=\"All\"\n        >\n          All\n        </button>\n        {\n          getCategories.map(({ strCategory }, index) => (\n            <button\n              className=\"category-filter\"\n              data-testid={ `${strCategory}-category-filter` }\n              type=\"button\"\n              key={ strCategory + index }\n              onClick={ (e) => this.toggle(e, strCategory) }\n              value={ strCategory }\n            >\n              {strCategory}\n            </button>\n          ))\n        }\n      </section>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  foodByCategories: (category) => dispatch(fetchFilterFoodByCategories(category)),\n});\n\nButtonCategories.propTypes = {\n  getCategories: PropTypes.objectOf(PropTypes.object).isRequired,\n  // btnClass: PropTypes.string.isRequired,\n  filter: PropTypes.func.isRequired,\n  filterAll: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(ButtonCategories);\n","import React, { Component } from 'react';\nimport '../css/Loader.css';\n\nclass Loader extends Component {\n  render() {\n    return (\n      <section className=\"loader-container\">\n        <section className=\"loading-text\">\n          <h1>\n            <span>L</span>\n            <span>a</span>\n            <span>r</span>\n            <span>i</span>\n            <span>c</span>\n            <span>a</span>\n          </h1>\n        </section>\n      </section>\n    );\n  }\n}\n\nexport default Loader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { motion } from 'framer-motion';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { animationScreen, container, transition } from '../animations';\nimport Header from '../components/header';\nimport { fetchFoodRecipes } from '../action';\nimport { fetchApiFoodCategories,\n  fetchFilterFoodByCategories,\n  getSearchBarResponse,\n} from '../action/action';\nimport Cards from '../components/cards';\nimport Footer from '../components/footer';\n\nimport '../css/comidas.css';\nimport '../App.css';\nimport ButtonCategories from '../components/ButtonCategories';\nimport Loader from '../components/Loader';\n\nclass Comidas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isRedirect: false,\n    };\n\n    this.categories = this.categories.bind(this);\n    this.updateState = this.updateState.bind(this);\n  }\n\n  async componentDidMount() {\n    const { apiFoodCategories, dispatchFoodRecipes, hasSearchBar, meals } = this.props;\n    hasSearchBar(true);\n    console.log(meals);\n    if (meals.length === 0) {\n      dispatchFoodRecipes();\n    }\n\n    apiFoodCategories();\n  }\n\n  componentDidUpdate() {\n    const { meals } = this.props;\n    const check = meals.some((el) => el.idMeal === '52968');\n    if (meals.length === 1 && !check) {\n      this.updateState();\n    }\n  }\n\n  componentWillUnmount() {\n    this.setState({ isRedirect: false });\n  }\n\n  categories() {\n    const { getFoodCategories } = this.props;\n    return (\n      <div>\n        { getFoodCategories.map((elem, index) => (\n          <p key={ index }>{ elem.strCategory }</p>)) }\n      </div>\n    );\n  }\n\n  updateState() {\n    this.setState({ isRedirect: true });\n  }\n\n  render() {\n    const { isRedirect } = this.state;\n    const {\n      location,\n      meals,\n      getFoodCategories,\n      dispatchFoodRecipes,\n      foodByCategories,\n      match,\n      loader,\n    } = this.props;\n    return (\n      <motion.section\n        id=\"top\"\n        className=\"food-wrap\"\n        initial=\"out\"\n        animate=\"end\"\n        exit=\"out\"\n        variants={ animationScreen }\n        transition={ transition }\n      >\n        <Header location={ location } />\n        { loader\n          ? <Loader />\n          : (\n            <main className=\"food-main\">\n              <ButtonCategories\n                btnClass=\"btn-filterMeasls-cards\"\n                getCategories={ getFoodCategories }\n                filter={ foodByCategories }\n                filterAll={ dispatchFoodRecipes }\n              />\n              <motion.section\n                className=\"cards-content\"\n                variants={ container }\n                initial=\"hidden\"\n                animate=\"visible\"\n              >\n                {\n                  meals.map((measl, index) => (\n                    <Cards\n                      url={ match.path }\n                      id={ measl.idMeal }\n                      key={ measl.idMeal }\n                      img={ measl.strMealThumb }\n                      title={ measl.strMeal }\n                      index={ index }\n                    />\n                  ))\n                }\n              </motion.section>\n            </main>\n          ) }\n        { isRedirect === true && <Redirect to={ `/comidas/${meals[0].idMeal}` } />}\n        <Footer />\n      </motion.section>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  apiFoodCategories: () => dispatch(fetchApiFoodCategories()),\n  dispatchFoodRecipes: () => dispatch(fetchFoodRecipes()),\n  hasSearchBar: (e) => dispatch(getSearchBarResponse(e)),\n  foodByCategories: (category) => dispatch(fetchFilterFoodByCategories(category)),\n});\n\nconst mapStateToProps = (state) => ({\n  getFoodCategories: state.foodCategories.allFoodCategories,\n  meals: state.foodCategories.meals,\n  loader: state.foodCategories.loader,\n});\n\nComidas.propTypes = {\n  apiFoodCategories: PropTypes.func,\n  dispatchFoodRecipes: PropTypes.func.isRequired,\n  getFoodCategories: PropTypes.objectOf(PropTypes.object),\n  location: PropTypes.shape,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Comidas);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { motion } from 'framer-motion';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router';\nimport { animationScreen, container, transition } from '../animations';\nimport Header from '../components/header';\nimport ButtonCategories from '../components/ButtonCategories';\nimport Cards from '../components/cards';\nimport Footer from '../components/footer';\nimport { fetchDrinksRecipes } from '../action/index';\nimport {\n  fetchApiDrinkCategories,\n  fetchFilterDrinkByCategories,\n  getSearchBarResponse,\n} from '../action/action';\nimport '../css/bebidas.css';\nimport Loader from '../components/Loader';\n\nclass Bebidas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isRedirect: false,\n    };\n    this.updateState = this.updateState.bind(this);\n  }\n\n  componentDidMount() {\n    const { dispatchDrinks, apiDrinkCategories, drinks, hasSearchBar } = this.props;\n    hasSearchBar(true);\n    if (drinks.length === 0) {\n      dispatchDrinks();\n    }\n    apiDrinkCategories();\n  }\n\n  componentDidUpdate() {\n    const { drinks } = this.props;\n    if (drinks.length === 1) {\n      this.updateState();\n    }\n  }\n\n  componentWillUnmount() {\n    this.setState({ isRedirect: false });\n  }\n\n  updateState() {\n    this.setState({ isRedirect: true });\n  }\n\n  render() {\n    const { isRedirect } = this.state;\n    const {\n      drinks,\n      location,\n      drinksCategories,\n      drinkByCategories,\n      dispatchDrinks,\n      match,\n      loader,\n    } = this.props;\n    return (\n      <motion.section\n        id=\"top\"\n        className=\"food-wrap\"\n        initial=\"out\"\n        animate=\"end\"\n        exit=\"out\"\n        variants={ animationScreen }\n        transition={ transition }\n      >\n        <Header location={ location } />\n        { loader\n          ? <Loader />\n          : (\n            <main className=\"drink-main\">\n              <ButtonCategories\n                btnClass=\"btn-filterDrinks-cards\"\n                getCategories={ drinksCategories }\n                filter={ drinkByCategories }\n                filterAll={ dispatchDrinks }\n              />\n              <motion.section\n                className=\"cards-content\"\n                variants={ container }\n                initial=\"hidden\"\n                animate=\"visible\"\n              >\n                {\n                  drinks.map((drink, index) => (\n                    <Cards\n                      url={ match.path }\n                      id={ drink.idDrink }\n                      key={ index }\n                      img={ drink.strDrinkThumb }\n                      title={ drink.strDrink }\n                      index={ index }\n                    />\n                  ))\n                }\n              </motion.section>\n              { isRedirect === true && <Redirect\n                to={\n                  `/bebidas/${drinks[0].idDrink}`\n                }\n              />}\n            </main>\n          )}\n        <Footer />\n      </motion.section>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchDrinks: () => dispatch(fetchDrinksRecipes()),\n  apiDrinkCategories: () => dispatch(fetchApiDrinkCategories()),\n  hasSearchBar: (e) => dispatch(getSearchBarResponse(e)),\n  drinkByCategories: (category) => dispatch(fetchFilterDrinkByCategories(category)),\n});\n\nconst mapStateToProps = (state) => ({\n  drinks: state.drinkCategories.drinks,\n  drinksCategories: state.drinkCategories.allDrinkCategories,\n  loader: state.foodCategories.loader,\n});\n\nBebidas.propTypes = {\n  drinks: PropTypes.arrayOf(PropTypes.shape).isRequired,\n  drinksCategories: PropTypes.arrayOf(PropTypes.shape).isRequired,\n  dispatchDrinks: PropTypes.func.isRequired,\n  apiDrinkCategories: PropTypes.func.isRequired,\n  location: PropTypes.shape.isRequired,\n  match: PropTypes.shape.isRequired,\n  hasSearchBar: PropTypes.func.isRequired,\n  drinkByCategories: PropTypes.func.isRequired,\n  loader: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Bebidas);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport { animationScreen, transition } from '../animations';\nimport Header from '../components/header';\nimport Footer from '../components/footer';\nimport { getSearchBarResponse } from '../action/action';\nimport '../css/telaDePerfil.css';\n\nexport class TelaDePerfil extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n    };\n    this.updateState = this.updateState.bind(this);\n    this.buttonsRender = this.buttonsRender.bind(this);\n  }\n\n  componentDidMount() {\n    const { hasSearchBar } = this.props;\n    hasSearchBar(false);\n    const info = JSON.parse(localStorage.getItem('user'));\n    console.log(info);\n    if (info !== null) { return this.updateState(info.email); }\n    this.updateState('email@email.com');\n  }\n\n  updateState(email) {\n    this.setState({ email });\n  }\n\n  buttonsRender() {\n    return (\n      <section className=\"perfil-btn\">\n        <Link to=\"/receitas-feitas\">\n          <button\n            type=\"button\"\n            data-testid=\"profile-done-btn\"\n            className=\"buttons-perfil\"\n          >\n            Receitas Feitas\n          </button>\n        </Link>\n        <Link to=\"/receitas-favoritas\">\n          <button\n            type=\"button\"\n            data-testid=\"profile-favorite-btn\"\n            className=\"buttons-perfil\"\n\n          >\n            Receitas Favoritas\n          </button>\n        </Link>\n        <Link to=\"/\">\n          <button\n            type=\"button\"\n            data-testid=\"profile-logout-btn\"\n            onClick={ this.cleanLocalStorage }\n            className=\"buttons-perfil\"\n          >\n            Sair\n          </button>\n        </Link>\n      </section>\n    );\n  }\n\n  cleanLocalStorage() {\n    localStorage.clear();\n  }\n\n  render() {\n    const { location } = this.props;\n    const { email } = this.state;\n\n    return (\n      <motion.section\n        className=\"profile-screen-btn\"\n        initial=\"out\"\n        animate=\"end\"\n        exit=\"out\"\n        variants={ animationScreen }\n        transition={ transition }\n      >\n        <Header location={ location } />\n        <section className=\"profile-main\">\n          <section className=\"perfil-avatar\">\n            <img className=\"profile-img\" src=\"https://i.pinimg.com/736x/64/81/22/6481225432795d8cdf48f0f85800cf66.jpg\" alt=\"icon\" />\n            <h1 data-testid=\"profile-email\" className=\"email\">{email}</h1>\n          </section>\n          {this.buttonsRender()}\n        </section>\n        <Footer />\n      </motion.section>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  hasSearchBar: (e) => dispatch(getSearchBarResponse(e)),\n});\n\nTelaDePerfil.propTypes = {\n  hasSearchBar: PropTypes.func.isRequired,\n  location: PropTypes.shape,\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(TelaDePerfil);\n","// data[dictionaryFood.Id]\nconst dictionaryFood = {\n  Id: 'idMeal',\n  Name: 'strMeal',\n  DrinkAlternate: 'strDrinkAlternate',\n  Category: 'strCategory',\n  Area: 'strArea',\n  Thumb: 'strMealThumb',\n  Tags: 'strTags',\n  Youtube: 'strYoutube',\n  Source: 'strSource',\n  ImageSource: 'strImageSource',\n  CreativeCommonsConfirmed: 'strCreativeCommonsConfirmed',\n  dateModified: 'dateModified',\n  Instructions: 'strInstructions',\n  Ingredients: [\n    ['strIngredient1', 'strMeasure1'],\n    ['strIngredient2', 'strMeasure2'],\n    ['strIngredient3', 'strMeasure3'],\n    ['strIngredient4', 'strMeasure4'],\n    ['strIngredient5', 'strMeasure5'],\n    ['strIngredient6', 'strMeasure6'],\n    ['strIngredient7', 'strMeasure7'],\n    ['strIngredient8', 'strMeasure8'],\n    ['strIngredient9', 'strMeasure9'],\n    ['strIngredient10', 'strMeasure10'],\n    ['strIngredient11', 'strMeasure11'],\n    ['strIngredient12', 'strMeasure12'],\n    ['strIngredient13', 'strMeasure13'],\n    ['strIngredient14', 'strMeasure14'],\n    ['strIngredient15', 'strMeasure15'],\n    ['strIngredient16', 'strMeasure16'],\n    ['strIngredient17', 'strMeasure17'],\n    ['strIngredient18', 'strMeasure18'],\n    ['strIngredient19', 'strMeasure19'],\n    ['strIngredient20', 'strMeasure20'],\n  ],\n};\n\nconst dictionaryDrink = {\n  Id: 'idDrink',\n  Name: 'strDrink',\n  DrinkAlternate: 'strDrinkAlternate',\n  Tags: 'strTags',\n  Youtube: 'strVideo',\n  Category: 'strCategory',\n  IBA: 'strIBA',\n  Alcoholic: 'strAlcoholic',\n  Glass: 'strGlass',\n  Instructions: 'strInstructions',\n  InstructionsES: 'strInstructionsES',\n  InstructionsDE: 'strInstructionsDE',\n  InstructionsFR: 'strInstructionsFR',\n  InstructionsIT: 'strInstructionsIT',\n  InstructionsZH_HANS: 'strInstructionsZH-HANS',\n  InstructionsZH_HANT: 'strInstructionsZH-HANT',\n  Thumb: 'strDrinkThumb',\n  Ingredients: [\n    ['strIngredient1', 'strMeasure1'],\n    ['strIngredient2', 'strMeasure2'],\n    ['strIngredient3', 'strMeasure3'],\n    ['strIngredient4', 'strMeasure4'],\n    ['strIngredient5', 'strMeasure5'],\n    ['strIngredient6', 'strMeasure6'],\n    ['strIngredient7', 'strMeasure7'],\n    ['strIngredient8', 'strMeasure8'],\n    ['strIngredient9', 'strMeasure9'],\n    ['strIngredient10', 'strMeasure10'],\n    ['strIngredient11', 'strMeasure11'],\n    ['strIngredient12', 'strMeasure12'],\n    ['strIngredient13', 'strMeasure13'],\n    ['strIngredient14', 'strMeasure14'],\n    ['strIngredient15', 'strMeasure15'],\n  ],\n  ImageSource: 'strImageSource',\n  ImageAttribution: 'strImageAttribution',\n  CreativeCommonsConfirmed: 'strCreativeCommonsConfirmed',\n  dateModified: 'dateModified',\n};\n\nfunction identification(obj) {\n  if (obj.idMeal) {\n    return dictionaryFood;\n  }\n  return dictionaryDrink;\n}\n\nexport default identification;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport identification from '../helper/dictionaryApi';\n\nclass Instructions extends Component {\n  render() {\n    const { data } = this.props;\n    const dictionary = identification(data);\n    return (\n      <section data-testid=\"instructions\">\n        <span>{data[dictionary.Instructions]}</span>\n      </section>\n    );\n  }\n}\n\nInstructions.propTypes = {\n  data: PropTypes.shape.isRequired,\n};\n\nexport default Instructions;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport identification from '../helper/dictionaryApi';\nimport '../css/Ingredients.css';\n\nclass Ingredients extends Component {\n  checkIngredient(param, index) {\n    const { func, state, isStart } = this.props;\n    const ourState = state || [];\n    const element = document.getElementById(`input-${index}`);\n    if (ourState.includes(param)) {\n      return (\n        // <label htmlFor={ `checkbox-${index}` }>\n        <input\n          className=\"ingredients-check\"\n          checked\n          id={ `checkbox-${index}` }\n          onChange={ () => func(param, element, 'checked') }\n          type=\"checkbox\"\n        />\n        // </label>\n      );\n    }\n    return (\n      <label htmlFor={ `checkbox-${index}` }>\n        <input\n          className=\"ingredients-check\"\n          onChange={ () => func(param, element, '') }\n          type=\"checkbox\"\n          id={ `checkbox-${index}` }\n          disabled={ !isStart }\n        />\n      </label>\n    );\n  }\n\n  render() {\n    const { data, isStart } = this.props;\n    const dictionary = identification(data);\n    return (\n      <section className=\"ingredients-content\">\n        {\n          dictionary.Ingredients.map((ingredient, index) => (\n            (data[ingredient[0]] !== null && data[ingredient[0]] !== '') ? (\n              <div\n                className=\"ingredients-row\"\n                id={ `input-${index}` }\n                key={ index }\n                data-testid={\n                  isStart === true\n                    ? `${index}-ingredient-step`\n                    : `${index}-ingredient-name-and-measure`\n                }\n              >\n                {this.checkIngredient(data[ingredient[0]], index)}\n                <label className=\"checkbox\" htmlFor={ `checkbox-${index}` }>\n                  <span>\n                    <svg width=\"12px\" height=\"9px\" viewbox=\"0 0 12 9\">\n                      <polyline points=\"1 5 4 8 11 1\" />\n                    </svg>\n                  </span>\n                  <div className=\"ingredients-measures\">{data[ingredient[1]]}</div>\n                  <div className=\"ingredients-name\" id={ `ingredient-${index}` }>\n                    {data[ingredient[0]]}\n                  </div>\n                </label>\n              </div>\n            ) : null\n          ))\n        }\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isStart: state.recipeDetails.isStart,\n});\n\nIngredients.propTypes = {\n  data: PropTypes.shape.isRequired,\n  isStart: PropTypes.bool.isRequired,\n  func: PropTypes.func.isRequired,\n  state: PropTypes.shape.isRequired,\n};\n\nexport default connect(mapStateToProps)(Ingredients);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport copy from 'clipboard-copy';\nimport identification from '../helper/dictionaryApi';\nimport shareIcon from '../images/shareIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport '../css/SharedFavorites.css';\nimport { isLink } from '../action/action';\n\nclass SharedFavorites extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      favIcon: false,\n      favIconColor: whiteHeartIcon,\n    };\n    this.handleFavClick = this.handleFavClick.bind(this);\n    this.renderState = this.renderState.bind(this);\n  }\n\n  componentDidMount() {\n    this.renderState();\n  }\n\n  handleFavClick() {\n    const { favIcon } = this.state;\n    const { details, id, page } = this.props;\n    const keyName = identification(details);\n    const recovery = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n    if (!favIcon) {\n      this.setState({\n        favIconColor: blackHeartIcon,\n        favIcon: true,\n      });\n\n      const recipe = [\n        ...recovery, {\n          id: details[keyName.Id],\n          type: page.includes('comidas') ? 'comida' : 'bebida',\n          area: details[keyName.Area] ? details[keyName.Area] : '',\n          category: details[keyName.Category] ? details[keyName.Category] : '',\n          alcoholicOrNot: details[keyName.Alcoholic] ? details[keyName.Alcoholic] : '',\n          name: details[keyName.Name],\n          image: details[keyName.Thumb],\n        },\n      ];\n\n      return localStorage.setItem('favoriteRecipes', JSON.stringify(recipe));\n    }\n\n    if (favIcon) {\n      console.log('sou verdadeiro', id, page);\n\n      this.setState({\n        favIconColor: whiteHeartIcon,\n        favIcon: false,\n      });\n      const favoriteKeys = recovery.filter((el) => el.id !== id) || {};\n      console.log(favoriteKeys);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteKeys));\n    }\n  }\n\n  renderState() {\n    const { id } = this.props;\n    const recoveryFavorite = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n    const check = recoveryFavorite.some((el) => el.id === id);\n\n    if (check) {\n      this.setState({ favIconColor: blackHeartIcon,\n        favIcon: true });\n    }\n  }\n\n  render() {\n    const { favIconColor, favIcon } = this.state;\n    const { page, id, link } = this.props;\n    return (\n      <section className=\"sec-share-fav\">\n        <button\n          className=\"details-btn btn-share\"\n          type=\"button\"\n          onClick={ () => copy(`http://localhost:3000/${page}/${id}`)\n            .then(() => {\n              window.scrollTo(0, 0);\n              link(true);\n            }) }\n        >\n          <img\n            className=\"img-share\"\n            data-testid=\"share-btn\"\n            src={ shareIcon }\n            alt={ shareIcon }\n          />\n        </button>\n        <button\n          className={ favIcon ? 'details-btn btn-active' : 'details-btn' }\n          type=\"button\"\n          onClick={ this.handleFavClick }\n        >\n          <img\n            className={ favIcon ? 'img-favorite-active' : 'img-favorite' }\n            data-testid=\"favorite-btn\"\n            src={ favIconColor }\n            alt={ favIconColor }\n          />\n        </button>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  details: state.recipeDetails.details,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  link: (bool) => dispatch(isLink(bool)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SharedFavorites);\n\nSharedFavorites.propTypes = {\n  details: PropTypes.shape.isRequired,\n  page: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  link: PropTypes.bool.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { IoIosArrowBack, IoMdHome } from 'react-icons/io';\n\nimport '../css/DetailsHeader.css';\nimport identification from '../helper/dictionaryApi';\nimport SharedFavorites from './SharedFavorites';\n\nclass DetailsHeader extends Component {\n  headerContainer() {\n    const { data, isDrink, page, id } = this.props;\n    const keyName = identification(data);\n    return (\n      <section className=\"header-container\">\n        <div className=\"title-container\">\n          <h2 className=\"recipe-title\" data-testid=\"recipe-title\">\n            {data[keyName.Name]}\n          </h2>\n          <span\n            className=\"recipe-category\"\n            data-testid=\"recipe-category\"\n          >\n            { isDrink ? data[keyName.Alcoholic] : data[keyName.Category] }\n          </span>\n        </div>\n        <div className=\"shared-favorite-content\">\n          <SharedFavorites id={ id } page={ page } />\n        </div>\n      </section>\n    );\n  }\n\n  render() {\n    const { data, history } = this.props;\n    const keyName = identification(data);\n    return (\n      <section>\n        <section className=\"recipe-details\">\n          <img\n            className=\"recipe-img\"\n            data-testid=\"recipe-photo\"\n            src={ data[keyName.Thumb] }\n            alt={ data[keyName.Name] }\n          />\n          <section className=\"recipe-header-content\">\n            {this.headerContainer()}\n          </section>\n        </section>\n        <button\n          type=\"button\"\n          className=\"goBack\"\n          onClick={ () => history.goBack() }\n        >\n          <IoIosArrowBack />\n        </button>\n        <button\n          type=\"button\"\n          className=\"goHome\"\n          onClick={ () => history.push('/comidas') }\n        >\n          <IoMdHome />\n        </button>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isDrink: state.recipeDetails.isDrink,\n});\n\nDetailsHeader.propTypes = {\n  data: PropTypes.shape.isRequired,\n  isDrink: PropTypes.bool.isRequired,\n  history: PropTypes.shape.isRequired,\n  page: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps)(DetailsHeader);\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router';\nimport PropTypes from 'prop-types';\nimport Card from 'react-bootstrap/Card';\nimport Group26 from '../images/Group26.svg';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../css/CarouselCards.css';\n\nexport default function CarouselCards({ id, img, title, index, url, subTitle }) {\n  const [isRedirect, setIsRedirect] = useState(false);\n\n  const redirectRecipe = () => {\n    setIsRedirect(true);\n  };\n  return (\n    <Card\n      className=\"carousel-card-content \"\n      data-testid={ `${index}-recomendation-card` }\n    >\n      <div className=\"carousel-img-content\">\n        <img className=\"group-26\" src={ Group26 } alt={ Group26 } />\n        <div className=\"img-wrap\">\n          <Card.Img\n            className=\"carousel-card-img\"\n            variant=\"top\"\n            src={ img }\n            data-testid={ `${index}-card-img` }\n          />\n        </div>\n      </div>\n      <Card.Body onClick={ redirectRecipe }>\n        <Card.Title\n          className=\"carousel-title\"\n          data-testid={ `${index}-recomendation-title` }\n        >\n          { title }\n        </Card.Title>\n        <Card.Subtitle className=\"carousel-subtitle\">{ subTitle }</Card.Subtitle>\n      </Card.Body>\n      { isRedirect && <Redirect to={ `${url}/${id}` } />}\n    </Card>\n  );\n}\n\nCarouselCards.propTypes = {\n  index: PropTypes.number.isRequired,\n  img: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  subTitle: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Slider from 'react-slick';\nimport CarouselCards from './CarouselCards';\n\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nclass CardsMeals extends Component {\n  render() {\n    const settings = {\n      dots: false,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 2,\n      slidesToScroll: 1,\n    };\n    const { meals } = this.props;\n    const max = 6;\n    const sliceMeals = meals.slice(0, max);\n    return (\n      <section className=\"slider\">\n        <Slider { ...settings }>\n          {\n            sliceMeals.map((measl, index) => (\n              <CarouselCards\n                url=\"/comidas\"\n                id={ measl.idMeal }\n                key={ measl.idMeal }\n                img={ measl.strMealThumb }\n                title={ measl.strMeal }\n                index={ index }\n                subTitle={ measl.strCategory }\n              />\n            ))\n          }\n        </Slider>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  meals: state.foodCategories.meals,\n});\n\nCardsMeals.propTypes = {\n  meals: PropTypes.arrayOf(PropTypes.shape).isRequired,\n};\n\nexport default connect(mapStateToProps)(CardsMeals);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Slider from 'react-slick';\nimport CarouselCards from './CarouselCards';\n\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nclass CardsDrinks extends Component {\n  render() {\n    const settings = {\n      dots: false,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 2,\n      slidesToScroll: 1,\n    };\n    const { drinks } = this.props;\n    const max = 6;\n    const sliceDrinks = drinks.slice(0, max);\n    return (\n      <section>\n        <Slider { ...settings }>\n          {\n            sliceDrinks.map((drink, index) => (\n              <div key={ index }>\n                <CarouselCards\n                  url=\"/bebidas\"\n                  id={ drink.idDrink }\n                  key={ index }\n                  img={ drink.strDrinkThumb }\n                  title={ drink.strDrink }\n                  index={ index }\n                  subTitle={ drink.strAlcoholic }\n                />\n              </div>\n            ))\n          }\n        </Slider>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  drinks: state.drinkCategories.drinks,\n});\n\nCardsDrinks.propTypes = {\n  drinks: PropTypes.arrayOf(PropTypes.shape).isRequired,\n};\n\nexport default connect(mapStateToProps)(CardsDrinks);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactPlayer from 'react-player';\nimport identification from '../helper/dictionaryApi';\n\nclass InstrutionVideo extends Component {\n  render() {\n    const { data } = this.props;\n    const keyName = identification(data);\n    return (\n      <section className=\"video\">\n        <ReactPlayer\n          controls\n          data-testid=\"video\"\n          url={ data[keyName.Youtube] }\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </section>\n    );\n  }\n}\n\nInstrutionVideo.propTypes = {\n  data: PropTypes.shape.isRequired,\n};\n\nexport default InstrutionVideo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { motion } from 'framer-motion';\nimport ScrollLock from 'react-scrolllock';\nimport Smile from '../images/image8.png';\nimport { isLink } from '../action/action';\n\nimport '../css/Modal.css';\nimport { animationModal, transition } from '../animations';\n\nfunction Modal({ children, history, link }) {\n  const handleOutsideClick = (e) => {\n    if (e.target.id === 'modal') link(false);\n  };\n\n  return (\n    <section\n      id=\"modal\"\n      className=\"modal\"\n      onClick={ handleOutsideClick }\n      onKeyPress={ handleOutsideClick }\n      role=\"presentation\"\n    >\n      <ScrollLock isActive={ link !== true } />\n      <motion.div\n        className=\"modal-container\"\n        animate=\"in\"\n        variants={ animationModal }\n        transition={ transition }\n      >\n        <img className=\"modal-img\" src={ Smile } alt=\"smile\" />\n        <div className=\"modal-content\">{children}</div>\n        <button\n          className=\"modal-btn\"\n          type=\"button\"\n          onClick={ () => {\n            history.push('/comidas');\n            link(false);\n          } }\n        >\n          Back to Home\n        </button>\n      </motion.div>\n    </section>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  link: (bool) => dispatch(isLink(bool)),\n});\n\nModal.propTypes = {\n  children: PropTypes.element.isRequired,\n  history: PropTypes.string.isRequired,\n  link: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Modal);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { motion } from 'framer-motion';\nimport { animationScreen, transition } from '../animations';\n\nimport '../css/Details.css';\nimport Instructions from '../components/Instructions';\nimport Ingredients from '../components/Ingredients';\nimport DetailsHeader from '../components/DetailsHeader';\n\nimport { fetchDrinksRecipes, fetchFoodRecipes } from '../action/index';\nimport {\n  startRecipe,\n  fetchDrinkDetails,\n  fetchFoodDetails,\n  getFoodDetails,\n} from '../action/action';\nimport CardMeals from '../components/CardsMeals';\nimport CardsDrinks from '../components/CardsDrinks';\nimport InstrutionVideo from '../components/InstrutionVideo';\nimport Modal from '../components/Modal';\n\nclass Detalhes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentId: '',\n      startedRecipe: false,\n      finishedRecipe: false,\n    };\n\n    this.handleFetch = this.handleFetch.bind(this);\n    this.redirectForInProgress = this.redirectForInProgress.bind(this);\n    this.checkStorage = this.checkStorage.bind(this);\n    this.btnStartRecipes = this.btnStartRecipes.bind(this);\n    this.btnContinueRecipe = this.btnContinueRecipe.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleFetch();\n    this.checkStorage();\n  }\n\n  componentDidUpdate() {\n    const { match: { params: { id } } } = this.props;\n    const { currentId } = this.state;\n    if (id !== currentId) return this.handleFetch();\n  }\n\n  componentWillUnmount() {\n    const { reboot } = this.props;\n    reboot('');\n  }\n\n  handleFetch() {\n    const {\n      match: { params: { page, id } },\n      foodDetails,\n      drinksDetails,\n      dispatchFoodRecipes,\n      dispatchDrinks,\n    } = this.props;\n\n    this.setState({ currentId: id });\n    dispatchFoodRecipes();\n    dispatchDrinks();\n    if (page === 'comidas') {\n      return foodDetails(id);\n    }\n    return drinksDetails(id);\n  }\n\n  redirectForInProgress() {\n    const { isStart, history, match: { params: { page, id } } } = this.props;\n    history.push(`/${page}/${id}/in-progress`);\n    isStart(true);\n  }\n\n  checkStorage() {\n    const { match: { params: { id } } } = this.props;\n    const { finishedRecipe } = this.state;\n\n    if (localStorage.doneRecipes) {\n      const checkDoneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n\n      checkDoneRecipes.forEach((recipe) => {\n        if (recipe.id === id) {\n          this.setState({ finishedRecipe: !finishedRecipe });\n        }\n      });\n    }\n\n    if (localStorage.inProgressRecipes) {\n      const checkInProgressRecipes = JSON.parse(localStorage\n        .getItem('inProgressRecipes'));\n\n      const mealsKeys = Object.keys(checkInProgressRecipes.meals || {});\n      const drinksKeys = Object.keys(checkInProgressRecipes.cocktails || {});\n\n      if (mealsKeys.some((item) => item === id)) {\n        this.setState({ startedRecipe: true });\n      }\n\n      if (drinksKeys.some((item) => item === id)) {\n        this.setState({ startedRecipe: true });\n      }\n    }\n  }\n\n  btnStartRecipes() {\n    return (\n      <section className=\"details-btn-content\">\n        <button\n          className=\"details-btn-startRecipe\"\n          type=\"button\"\n          data-testid=\"start-recipe-btn\"\n          onClick={ () => {\n            this.redirectForInProgress();\n          } }\n        >\n          Iniciar Receita\n        </button>\n      </section>\n    );\n  }\n\n  btnContinueRecipe() {\n    return (\n      <section className=\"details-btn-content\">\n        <button\n          className=\"details-btn-startRecipe\"\n          type=\"button\"\n          data-testid=\"start-recipe-btn\"\n          onClick={ () => {\n            this.redirectForInProgress();\n          } }\n        >\n          Continuar Receita\n        </button>\n      </section>\n    );\n  }\n\n  render() {\n    const { startedRecipe, finishedRecipe } = this.state;\n    const {\n      details,\n      isDrink,\n      match: { params: { page, id } },\n      history,\n      link,\n    } = this.props;\n    return (\n      <motion.section\n        id=\"top\"\n        className=\"page-details\"\n        initial=\"out\"\n        animate=\"end\"\n        exit=\"out\"\n        variants={ animationScreen }\n        transition={ transition }\n      >\n        <DetailsHeader data={ details } page={ page } id={ id } history={ history } />\n        <section className=\"details-content\">\n          <section>\n            <h3 className=\"details-title\">Ingredients</h3>\n            <div className=\"details-ingredients\">\n              <Ingredients data={ details } />\n            </div>\n          </section>\n          <section className=\"details-instruction-content\" data-testid=\"instructions\">\n            <h3 className=\"details-title\">Instructions</h3>\n            <div className=\"details-intructions\">\n              <Instructions data={ details } />\n            </div>\n          </section>\n          {\n            isDrink === false && (\n              <section className=\"details-video\">\n                <h3 className=\"details-title\">Video</h3>\n                <InstrutionVideo data={ details } />\n              </section>\n            )\n          }\n          <section className=\"details-Recommended\">\n            <h3 className=\"details-title\">Recomendadas</h3>\n            {\n              isDrink === false ? <CardsDrinks /> : <CardMeals />\n            }\n          </section>\n        </section>\n        { finishedRecipe ? null : this.btnStartRecipes() }\n        { startedRecipe ? this.btnContinueRecipe() : null }\n        {\n          link && <Modal history={ history }><p>Link copiado!</p></Modal>\n        }\n      </motion.section>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  isStart: (e) => dispatch(startRecipe(e)),\n  drinksDetails: (id) => dispatch(fetchDrinkDetails(id)),\n  foodDetails: (id) => dispatch(fetchFoodDetails(id)),\n  reboot: (e) => dispatch(getFoodDetails(e)),\n  dispatchDrinks: () => dispatch(fetchDrinksRecipes()),\n  dispatchFoodRecipes: () => dispatch(fetchFoodRecipes()),\n});\n\nconst mapStateToProps = (state) => ({\n  mealsDetails: state.foodCategories.recipeDetails,\n  details: state.recipeDetails.details,\n  isDrink: state.recipeDetails.isDrink,\n  drinks: state.drinkCategories.drinks,\n  meals: state.foodCategories.meals,\n  link: state.recipeDetails.link,\n});\n\nDetalhes.propTypes = {\n  isStart: PropTypes.func.isRequired,\n  drinksDetails: PropTypes.func.isRequired,\n  foodDetails: PropTypes.func.isRequired,\n  dispatchDrinks: PropTypes.func.isRequired,\n  dispatchFoodRecipes: PropTypes.func.isRequired,\n  reboot: PropTypes.func.isRequired,\n  details: PropTypes.shape.isRequired,\n  match: PropTypes.shape.isRequired,\n  isDrink: PropTypes.bool.isRequired,\n  link: PropTypes.bool.isRequired,\n  history: PropTypes.shape.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Detalhes);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router';\nimport Header from '../../components/header';\nimport Footer from '../../components/footer';\nimport { fetchRamdomRecipe, getSearchBarResponse } from '../../action/action';\n\nimport '../../css/TelaDeExplorar.css';\n\nexport class ExplorarComidasBebidas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: '',\n      id: '',\n      isRedirect: false,\n    };\n    this.updateState = this.updateState.bind(this);\n    this.handleApi = this.handleApi.bind(this);\n    this.verifyToRedirect = this.verifyToRedirect.bind(this);\n  }\n\n  componentDidMount() {\n    const { hasSearchBar } = this.props;\n    hasSearchBar(false);\n  }\n\n  componentWillUnmount() {\n    console.log('entrei em unmount');\n    this.setState({ id: '', type: '', isRedirect: false });\n  }\n\n  async handleApi() {\n    const { location, fetchApi } = this.props;\n\n    if (location.pathname.includes('comida')) {\n      fetchApi('mealdb', 'meals');\n      return this.setState({ type: 'comidas' });\n    }\n    await fetchApi('cocktaildb', 'drinks');\n    return this.setState({ type: 'bebidas' });\n  }\n\n  updateState(param) {\n    const { getDetailsRecipe } = this.props;\n    const { id, should } = this.state;\n    console.log(should);\n\n    if (!id && getDetailsRecipe.idMeal !== undefined && param === 'comidas') {\n      console.log('entrei');\n\n      return this.setState({ id: getDetailsRecipe.idMeal },\n        () => this.verifyToRedirect('comidas'));\n    }\n    if (!id && getDetailsRecipe.idDrink !== undefined && param === 'bebidas') {\n      console.log('bebidas');\n      return this.setState({ id: getDetailsRecipe.idDrink },\n        () => this.verifyToRedirect('bebidas'));\n    }\n  }\n\n  verifyToRedirect(param) {\n    const { id } = this.state;\n    const { getDetailsRecipe } = this.props;\n\n    if (getDetailsRecipe.idMeal === id && param === 'comidas') {\n      return this.setState({ isRedirect: true });\n    }\n    if (getDetailsRecipe.idDrink === id && param === 'bebidas') {\n      console.log('bebidas');\n      return this.setState({ isRedirect: true });\n    }\n  }\n\n  renderButtons(param) {\n    const { location } = this.props;\n    return (\n      <section className=\"explorer-filter\">\n        <Link to={ `/explorar/${param}/ingredientes` }>\n          <button\n            className=\"btn-filters\"\n            data-testid=\"explore-by-ingredient\"\n            type=\"button\"\n          >\n            Por Ingredientes\n          </button>\n        </Link>\n        { location.pathname.includes('comida')\n        && (\n          <Link to=\"/explorar/comidas/area\">\n            <button\n              className=\"btn-filters\"\n              data-testid=\"explore-by-area\"\n              type=\"button\"\n            >\n              Por Local de Origem\n            </button>\n          </Link>)}\n        <button\n          className=\"btn-filters\"\n          data-testid=\"explore-surprise\"\n          onClick={ this.handleApi }\n          type=\"button\"\n        >\n          Me Surpreenda!\n        </button>\n      </section>);\n  }\n\n  render() {\n    const { location } = this.props;\n    const { isRedirect, type, id } = this.state;\n    const PAGE_LOCATION = location.pathname.includes('comida');\n\n    return (\n      <section>\n        <Header location={ location } />\n        <section className=\"explorer-content\">\n          { PAGE_LOCATION === true ? this.renderButtons('comidas')\n            : this.renderButtons('bebidas') }\n          { type !== undefined && this.updateState(type)}\n          { isRedirect && <Redirect to={ `/${type}/${id}` } />}\n        </section>\n        <Footer />\n      </section>\n    );\n  }\n}\n\nExplorarComidasBebidas.propTypes = {\n  hasSearchBar: PropTypes.func.isRequired,\n  sendRamdomRecipe: PropTypes.func.isRequired,\n  location: PropTypes.shape.isRequired,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  getDetailsRecipe: state.recipeDetails.details,\n\n});\nconst mapDispatchToProps = (dispatch) => ({\n  hasSearchBar: (e) => dispatch(getSearchBarResponse(e)),\n  fetchApi: (e, a) => dispatch(fetchRamdomRecipe(e, a)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExplorarComidasBebidas);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport { animationScreen, transition } from '../animations';\nimport Header from '../components/header';\nimport Footer from '../components/footer';\nimport { getSearchBarResponse } from '../action/action';\n\nimport '../css/TelaDeExplorar.css';\n\nexport class TelaDeExplorar extends Component {\n  componentDidMount() {\n    const { hasSearchBar } = this.props;\n\n    hasSearchBar(false);\n  }\n\n  render() {\n    const { location } = this.props;\n\n    return (\n      <motion.section\n        initial=\"out\"\n        animate=\"end\"\n        exit=\"out\"\n        variants={ animationScreen }\n        transition={ transition }\n      >\n        <Header location={ location } />\n        <section className=\"explorer-page\">\n          <section className=\"explorer-screen-main\">\n            <Link to=\"/explorar/comidas\">\n              <button\n                className=\"explorer-screen-btn\"\n                data-testid=\"explore-food\"\n                name=\"comidas\"\n                type=\"button\"\n              >\n                Explorar Comidas\n              </button>\n            </Link>\n            <Link to=\"/explorar/bebidas\">\n              <button\n                className=\"explorer-screen-btn\"\n                data-testid=\"explore-drinks\"\n                name=\"bebidas\"\n                type=\"button\"\n              >\n                Explorar Bebidas\n              </button>\n            </Link>\n          </section>\n        </section>\n        <Footer />\n      </motion.section>\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch) => ({\n  hasSearchBar: (e) => dispatch(getSearchBarResponse(e)),\n});\n\nTelaDeExplorar.propTypes = {\n  hasSearchBar: PropTypes.func.isRequired,\n  location: PropTypes.shape,\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(TelaDeExplorar);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { motion } from 'framer-motion';\nimport Card from 'react-bootstrap/Card';\nimport { Redirect } from 'react-router';\nimport Group26 from '../images/Group26.svg';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../css/IngredientCards.css';\nimport { item } from '../animations';\n\nclass IngredientCards extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: '',\n      id: '',\n      isRedirect: false,\n    };\n    this.updateState = this.updateState.bind(this);\n    this.handleApi = this.handleApi.bind(this);\n    this.imgContainer = this.imgContainer.bind(this);\n  }\n\n  componentWillUnmount() {\n    console.log('a');\n    this.setState({ id: undefined });\n    this.setState({ isRedirect: false });\n  }\n\n  async handleApi() {\n    const { details, title } = this.props;\n\n    await details(title);\n    console.log('bah');\n    return this.setState({ type: 'fetching', id: 'should' });\n  }\n\n  updateState() {\n    const { items } = this.props;\n    const { id } = this.state;\n\n    if (items.length !== 0 && id.length !== 0) {\n      console.log('pão');\n      return this.setState({ isRedirect: true });\n    }\n  }\n\n  imgContainer(img, index) {\n    return (\n      <div className=\"img-container\">\n        <Card.Img\n          className=\"ingredient-img\"\n          variant=\"top\"\n          src={ img }\n          data-testid={ `${index}-card-img` }\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const { img, title, index, url } = this.props;\n    const { isRedirect, type } = this.state;\n    return (\n      <section>\n        <motion.div\n          className=\"ingredient-card\"\n          data-testid={ `${index}-ingredient-card` }\n          variants={ item }\n          onClick={ this.handleApi }\n        >\n          <div className=\"img-content\">\n            <img className=\"group-26\" src={ Group26 } alt={ Group26 } />\n            <div className=\"img-wrap\">\n              {this.imgContainer(img, index)}\n            </div>\n          </div>\n          <Card.Title className=\"card-name\" data-testid={ `${index}-card-name` }>\n            { title }\n          </Card.Title>\n        </motion.div>\n        { type !== undefined && this.updateState()}\n        { isRedirect && <Redirect to={ url } />}\n      </section>\n    );\n  }\n}\n\nIngredientCards.propTypes = {\n  index: PropTypes.number.isRequired,\n  img: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  details: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(PropTypes.shape).isRequired,\n};\n\nexport default IngredientCards;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { motion } from 'framer-motion';\nimport IngredientCards from '../components/ingredientCards';\nimport { fetchByIngredient, getSearchBarResponse } from '../action/action';\nimport { fetchFoodRecipes,\n  fetchDrinksRecipesByIngredient,\n  fetchFoodRecipesByIngredients } from '../action/index';\nimport Footer from '../components/footer';\nimport Header from '../components/header';\nimport { container } from '../animations';\n\nclass explorarIngredientes extends Component {\n  componentDidMount() {\n    const { fetchApi, location, hasSearchBar } = this.props;\n    hasSearchBar(false);\n\n    if (location.pathname.includes('comida')) {\n      console.log('sou comida');\n      return fetchApi('meal');\n    }\n    console.log('sou bebida');\n    return fetchApi('cocktail');\n  }\n\n  renderElements(param) {\n    const { location,\n      fetchApiByIngredient, fetchApiDrinksByingredient, meals, drinks } = this.props;\n\n    if (location.pathname.includes('comida')) {\n      return param.map((el, index) => (\n        <IngredientCards\n          url=\"/comidas\"\n          id={ el.idIngredient }\n          key={ index }\n          img={ `https://www.themealdb.com/images/ingredients/${el.strIngredient}-Small.png` }\n          title={ el.strIngredient }\n          index={ index }\n          details={ fetchApiByIngredient }\n          items={ meals }\n        />\n      ));\n    }\n    return param.map((el, index) => (\n      <IngredientCards\n        url=\"/bebidas\"\n        key={ index }\n        img={ `https://www.thecocktaildb.com/images/ingredients/${el.strIngredient1}-Small.png` }\n        title={ el.strIngredient1 }\n        index={ index }\n        details={ fetchApiDrinksByingredient }\n        items={ drinks }\n      />\n    ));\n  }\n\n  render() {\n    const { getApiIngredient, location } = this.props;\n    return (\n      <div>\n        <Header location={ location } />\n        <motion.section\n          className=\"ingredient-container\"\n          variants={ container }\n          initial=\"hidden\"\n          animate=\"visible\"\n        >\n          { getApiIngredient.length !== 0 && this.renderElements(getApiIngredient)}\n        </motion.section>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchApi: (e) => dispatch(fetchByIngredient(e)),\n  fetchApiByIngredient: (e) => dispatch(fetchFoodRecipesByIngredients(e)),\n  fetchApiDrinksByingredient: (e) => dispatch(fetchDrinksRecipesByIngredient(e)),\n  dispatchFoodRecipes: () => dispatch(fetchFoodRecipes()),\n  hasSearchBar: (e) => dispatch(getSearchBarResponse(e)),\n\n});\n\nconst mapStateToProps = (state) => ({\n  getApiIngredient: state.exploreIngredient.recipe,\n  getDetailsRecipe: state.foodCategories.recipeDetails,\n  drinks: state.drinkCategories.drinks,\n  meals: state.foodCategories.meals,\n\n});\n\nexplorarIngredientes.propTypes = {\n  fetchApiDrinksByingredient: PropTypes.func.isRequired,\n  meals: PropTypes.func.isRequired,\n  drinks: PropTypes.func.isRequired,\n  fetchApiByIngredient: PropTypes.func.isRequired,\n  getApiIngredient: PropTypes.func.isRequired,\n  location: PropTypes.shape.isRequired,\n  fetchApi: PropTypes.func.isRequired,\n  hasSearchBar: PropTypes.func.isRequired,\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(explorarIngredientes);\n","import { isLoading, ERROR, getAllFoodRecipes } from '../action';\nimport invokeAlert from '../helper/alertMsg';\n\nconst fetchFoodRecipesByArea = (country = '') => (dispatch) => {\n  const maxRecipes = 12;\n  dispatch(isLoading());\n  fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?a=${country}`)\n    .then((response) => response.json())\n    .then((data) => {\n      if (data.meals === null) {\n        return invokeAlert(\n          alert, ERROR,\n        );\n      }\n      const recipes = data.meals.slice(0, maxRecipes);\n      dispatch(getAllFoodRecipes(recipes));\n    });\n};\n\nexport default fetchFoodRecipesByArea;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { motion } from 'framer-motion';\nimport { animationScreen, container, transition } from '../animations';\nimport Header from '../components/header';\nimport Footer from '../components/footer';\nimport Cards from '../components/cards';\nimport { fetchFoodRecipes } from '../action';\nimport { fetchArea, getSearchBarResponse } from '../action/action';\nimport fetchFoodRecipesByArea from '../services/servicesApi';\n\nimport '../css/ExplorarArea.css';\n\nclass ExplorarArea extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { fetchCountry, dispatchFoodRecipes, hasSearchBar } = this.props;\n    fetchCountry();\n    hasSearchBar(true);\n    dispatchFoodRecipes();\n  }\n\n  handleChange({ target: { value } }) {\n    const { dispatchFoodRecipesByArea, dispatchFoodRecipes } = this.props;\n    if (value === 'All') {\n      return dispatchFoodRecipes();\n    }\n    dispatchFoodRecipesByArea(value);\n  }\n\n  render() {\n    const { location, country, meals } = this.props;\n    return (\n      <motion.div\n        initial=\"out\"\n        animate=\"end\"\n        exit=\"out\"\n        variants={ animationScreen }\n        transition={ transition }\n      >\n        <Header location={ location } />\n        <section className=\"ex-area-content\">\n          <select\n            className=\"select\"\n            onChange={ this.handleChange }\n            data-testid=\"explore-by-area-dropdown\"\n          >\n            <option data-testid=\"All-option\">\n              All\n            </option>\n            {country && country.map((el, index) => (\n              <option data-testid={ `${el.strArea}-option` } key={ index }>\n                {el.strArea}\n              </option>))}\n          </select>\n          <motion.section\n            className=\"ex-area-cards\"\n            variants={ container }\n            initial=\"hidden\"\n            animate=\"visible\"\n          >\n            { meals.length !== 0\n                && meals.map((measl, index) => (\n                  <Cards\n                    url=\"/comidas\"\n                    id={ measl.idMeal }\n                    key={ index }\n                    img={ measl.strMealThumb }\n                    title={ measl.strMeal }\n                    index={ index }\n                  />\n                ))}\n          </motion.section>\n        </section>\n        <Footer />\n      </motion.div>\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCountry: () => dispatch(fetchArea()),\n  dispatchFoodRecipes: () => dispatch(fetchFoodRecipes()),\n  dispatchFoodRecipesByArea: (e) => dispatch(fetchFoodRecipesByArea(e)),\n  hasSearchBar: (e) => dispatch(getSearchBarResponse(e)),\n\n});\n\nconst mapStateToProps = (state) => ({\n  country: state.foodArea.country.meals,\n  meals: state.foodCategories.meals,\n});\n\nExplorarArea.propTypes = {\n  dispatchFoodRecipes: PropTypes.func.isRequired,\n  location: PropTypes.shape.isRequired,\n  hasSearchBar: PropTypes.func.isRequired,\n  fetchCountry: PropTypes.func.isRequired,\n  dispatchFoodRecipesByArea: PropTypes.func.isRequired,\n  country: PropTypes.arrayOf(PropTypes.shape).isRequired,\n  meals: PropTypes.arrayOf(PropTypes.shape).isRequired,\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExplorarArea);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { motion } from 'framer-motion';\nimport { animationScreen, transition } from '../animations';\nimport { startRecipe, fetchDrinkDetails, fetchFoodDetails } from '../action/action';\nimport Ingredients from '../components/Ingredients';\nimport '../css/Details.css';\nimport '../css/progress.css';\nimport Instructions from '../components/Instructions';\nimport DetailsHeader from '../components/DetailsHeader';\nimport identification from '../helper/dictionaryApi';\nimport Modal from '../components/Modal';\n\nclass Progresso extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: [],\n      should: false,\n      recipesLength: [],\n      count: 0,\n      allIngredients: [],\n    };\n    this.updateState = this.updateState.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.saveDoneRecipes = this.saveDoneRecipes.bind(this);\n    this.finishRecipe = this.finishRecipe.bind(this);\n    this.countRecipesAllLength = this.countRecipesAllLength.bind(this);\n  }\n\n  componentDidMount() {\n    const { match: { params: { page, id } },\n      foodDetails, drinksDetails, isStart } = this.props;\n    isStart(true);\n\n    const storage = Object.keys(localStorage);\n    const check = storage.some((key) => key === 'inProgressRecipes');\n\n    if (check === false) {\n      localStorage.setItem('inProgressRecipes', JSON\n        .stringify({ cocktails: {}, meals: {} }));\n    }\n\n    this.updateState();\n    if (page === 'comidas') {\n      return foodDetails(id);\n    }\n    return drinksDetails(id);\n  }\n\n  componentDidUpdate() {\n    const { id, allIngredients } = this.state;\n    const { match: { params: { page } } } = this.props;\n    const recovery = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (page === 'comidas') {\n      return localStorage.setItem('inProgressRecipes', JSON.stringify({ ...recovery,\n        meals: { ...recovery.meals,\n          [id]: allIngredients },\n      }));\n    }\n\n    return localStorage.setItem('inProgressRecipes', JSON.stringify({ ...recovery,\n      cocktails: { ...recovery.cocktails,\n        [id]: allIngredients },\n    }));\n  }\n\n  componentWillUnmount() {\n    const { isStart } = this.props;\n    isStart(false);\n  }\n\n  onClick(param, element, boolean) {\n    const { allIngredients } = this.state;\n    if (allIngredients.includes(param) && boolean === 'checked') {\n      element.classList.remove('riscado');\n\n      return this.setState({\n        allIngredients: allIngredients.filter((el) => el !== param),\n        count: allIngredients.length - 1,\n      });\n    }\n    element.classList.add('riscado');\n    this.setState({ ...allIngredients,\n      allIngredients: [...allIngredients, param],\n      count: allIngredients.length + 1,\n    });\n  }\n\n  updateState() {\n    const { match: { params: { id } } } = this.props;\n    this.setState({ should: true, id });\n\n    const recovery = JSON.parse(localStorage.getItem('inProgressRecipes')) || [];\n    if (recovery.meals[id] !== undefined) {\n      return this.setState({ allIngredients: recovery.meals[id],\n        count: recovery.meals[id].length });\n    }\n    if (recovery.cocktails[id] !== undefined) {\n      return this.setState({ allIngredients: recovery.cocktails[id],\n        count: recovery.cocktails[id].length,\n      });\n    }\n  }\n\n  test() {\n    const { details, match: { params: { id, page } } } = this.props;\n    const { should } = this.state;\n\n    if (should === true) {\n      if (page === 'comidas') {\n        this.countRecipesAllLength();\n        return this.setState({\n          id: details.idMeal,\n          should: false });\n      }\n      this.countRecipesAllLength();\n\n      return this.setState({\n        id,\n        should: false });\n    }\n  }\n\n  saveDoneRecipes() {\n    const { details, match: { params: { page } } } = this.props;\n    const keyName = identification(details);\n    const currentDate = new Date().toLocaleDateString();\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes')) || [];\n    const recipe = {\n      id: details[keyName.Id],\n      type: page === 'comidas' ? 'comida' : 'bebida',\n      area: details[keyName.Area] ? details[keyName.Area] : '',\n      category: details[keyName.Category] ? details[keyName.Category] : '',\n      alcoholicOrNot: details[keyName.Alcoholic] ? details[keyName.Alcoholic] : '',\n      name: details[keyName.Name],\n      image: details[keyName.Thumb],\n      doneDate: `${currentDate}`,\n      tags: details[keyName.Tags] ? details[keyName.Tags].split(',') : '',\n    };\n    doneRecipes.push(recipe);\n    localStorage.setItem('doneRecipes', JSON.stringify(doneRecipes));\n  }\n\n  finishRecipe() {\n    const { match: { params: { id, page } }, history } = this.props;\n    if (localStorage.inProgressRecipes) {\n      const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes')) || [];\n\n      if (page === 'comidas') {\n        delete inProgress.meals[id];\n        localStorage.setItem('inProgressRecipes', JSON.stringify(inProgress));\n      }\n      if (page === 'bebidas') {\n        delete inProgress.cocktails[id];\n        localStorage.setItem('inProgressRecipes', JSON.stringify(inProgress));\n      }\n    }\n    this.saveDoneRecipes();\n    history.push('/receitas-feitas');\n  }\n\n  countRecipesAllLength() {\n    const { details } = this.props;\n    const dictionary = identification(details);\n    const total = [];\n    dictionary.Ingredients.map((ingredient) => {\n      if (details[ingredient[0]] !== null && details[ingredient[0]] !== '') {\n        total.push(details[ingredient[0]]);\n      }\n      return this.setState({\n        recipesLength: total.length,\n      });\n    });\n  }\n\n  render() {\n    const { details, match: { params: { page, id } }, history, link } = this.props;\n    const { allIngredients, count, recipesLength } = this.state;\n    return (\n      <motion.section\n        className=\"page-progress\"\n        initial=\"out\"\n        animate=\"end\"\n        exit=\"out\"\n        variants={ animationScreen }\n        transition={ transition }\n      >\n        { details.strIngredient1 !== undefined && this.test() }\n        {link && <Modal history={ history }><p>Link copiado!</p></Modal>}\n        <DetailsHeader data={ details } page={ page } id={ id } history={ history } />\n        <section className=\"details-content\">\n          <section>\n            <h3 className=\"details-title\">Ingredients</h3>\n            <span className=\"details-ingredients\">\n              <Ingredients\n                data={ details }\n                func={ this.onClick }\n                state={ allIngredients }\n              />\n            </span>\n          </section>\n          <section data-testid=\"instructions\">\n            <h3 className=\"details-title\">Instructions</h3>\n            <span className=\"details-intructions\">\n              <Instructions data={ details } />\n            </span>\n          </section>\n          <section className=\"details-btn-content\">\n            <button\n              className={ count !== recipesLength\n                ? 'details-btn-startRecipe disabled' : 'details-btn-startRecipe' }\n              type=\"button\"\n              data-testid=\"finish-recipe-btn\"\n              onClick={ () => this.finishRecipe() }\n              disabled={ count !== recipesLength }\n            >\n              Finalizar Receita\n            </button>\n          </section>\n        </section>\n      </motion.section>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  isStart: (e) => dispatch(startRecipe(e)),\n  drinksDetails: (id) => dispatch(fetchDrinkDetails(id)),\n  foodDetails: (id) => dispatch(fetchFoodDetails(id)),\n});\n\nconst mapStateToProps = (state) => ({\n  details: state.recipeDetails.details,\n  link: state.recipeDetails.link,\n});\n\nProgresso.propTypes = {\n  isStart: PropTypes.func.isRequired,\n  drinksDetails: PropTypes.func.isRequired,\n  foodDetails: PropTypes.func.isRequired,\n  details: PropTypes.shape.isRequired,\n  match: PropTypes.shape.isRequired,\n  history: PropTypes.shape.isRequired,\n  link: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Progresso);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Card from 'react-bootstrap/Card';\nimport copy from 'clipboard-copy';\nimport { Link } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport { animationScreen, transition } from '../animations';\nimport Header from '../components/header';\nimport { getSearchBarResponse, isLink } from '../action/action';\n\nimport '../css/TelaDeFavoritas.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport Group26 from '../images/Group26.svg';\nimport Modal from '../components/Modal';\n\nclass TelaReceitasFavoritas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      favIconColor: blackHeartIcon,\n      favoriteList: [],\n    };\n\n    this.isFavorite = this.isFavorite.bind(this);\n    this.getFavoriteRecipes = this.getFavoriteRecipes.bind(this);\n  }\n\n  componentDidMount() {\n    const { hasSearchBar } = this.props;\n\n    this.getFavoriteRecipes();\n    hasSearchBar(false);\n  }\n\n  getFavoriteRecipes() {\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n    this.setState({ favoriteList: favoriteRecipes });\n    console.log(favoriteRecipes);\n  }\n\n  isFavorite(id) {\n    const { favoriteList } = this.state;\n    const filterFavorite = favoriteList.filter((recipe) => recipe.id !== id);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(filterFavorite));\n\n    this.setState({ favoriteList: filterFavorite });\n  }\n\n  render() {\n    const { location, link, history, islink } = this.props;\n    const { favIconColor, favoriteList } = this.state;\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    return (\n      <motion.section\n        initial=\"out\"\n        animate=\"end\"\n        exit=\"out\"\n        variants={ animationScreen }\n        transition={ transition }\n      >\n        <Header location={ location } />\n        {link && <Modal history={ history }><p>Link copiado!</p></Modal>}\n        <section className=\"favorite-recipes-main\">\n          <section className=\"list-filter-btn\">\n            <button\n              className=\"favorite-filters\"\n              type=\"button\"\n              data-testid=\"filter-by-all-btn\"\n              onClick={ () => this.setState({ favoriteList: favoriteRecipes }) }\n            >\n              All\n            </button>\n            <button\n              className=\"favorite-filters\"\n              type=\"button\"\n              data-testid=\"filter-by-food-btn\"\n              onClick={ () => {\n                this.setState({ favoriteList: favoriteRecipes\n                  .filter((recipe) => recipe.type === 'comida') });\n              } }\n            >\n              Food\n            </button>\n            <button\n              className=\"favorite-filters\"\n              type=\"button\"\n              data-testid=\"filter-by-drink-btn\"\n              onClick={ () => {\n                this.setState({ favoriteList: favoriteRecipes\n                  .filter((recipe) => recipe.type === 'bebida') });\n              } }\n            >\n              Drinks\n            </button>\n          </section>\n          <section className=\"cards-content\">\n            {\n              favoriteList.map(({\n                type, name, id, image, area, category, alcoholicOrNot,\n              }, index) => (\n                <Card key={ name } className=\"favorite-card\">\n                  <Link to={ `${type}s/${id}` }>\n                    <div className=\"image-content\">\n                      <img className=\"group-26\" src={ Group26 } alt={ Group26 } />\n                      <div className=\"img-shadow\">\n                        <Card.Img\n                          className=\"favorite-card-img\"\n                          data-testid={ `${index}-horizontal-image` }\n                          src={ image }\n                        />\n                      </div>\n                    </div>\n                  </Link>\n                  <section className=\"favorite-buttons\">\n                    <button\n                      type=\"button\"\n                      className=\"details-btn favorite-btn-share\"\n                      onClick={ () => copy(`http://localhost:3000/${type}s/${id}`)\n                        .then(() => islink(true)) }\n                    >\n                      <img\n                        data-testid={ `${index}-horizontal-share-btn` }\n                        src={ shareIcon }\n                        alt={ shareIcon }\n                      />\n                    </button>\n                    <button\n                      type=\"button\"\n                      className=\"details-btn favorite-btn\"\n                      onClick={ () => this.isFavorite(id) }\n                    >\n                      <img\n                        data-testid={ `${index}-horizontal-favorite-btn` }\n                        src={ favIconColor }\n                        alt={ favIconColor }\n                      />\n                    </button>\n                  </section>\n                  <Card.Body className=\"favorite-card-body\">\n                    <Link to={ `${type}s/${id}` }>\n                      <Card.Title\n                        className=\"favorite-card-title\"\n                        data-testid={ `${index}-horizontal-name` }\n                      >\n                        { name }\n                      </Card.Title>\n                      <Card.Subtitle\n                        data-testid={ `${index}-horizontal-top-text` }\n                        className=\"favorite-card-subtitle\"\n                      >\n                        {\n                          (type === 'comida') ? `${area} - ${category}`\n                            : alcoholicOrNot\n                        }\n                      </Card.Subtitle>\n                    </Link>\n                  </Card.Body>\n                </Card>\n              ))\n            }\n          </section>\n        </section>\n      </motion.section>\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch) => ({\n  hasSearchBar: (e) => dispatch(getSearchBarResponse(e)),\n  islink: (bool) => dispatch(isLink(bool)),\n});\n\nconst mapStateToProps = (state) => ({\n  link: state.recipeDetails.link,\n});\n\nTelaReceitasFavoritas.propTypes = {\n  hasSearchBar: PropTypes.func,\n  islink: PropTypes.func,\n  location: PropTypes.shape,\n  link: PropTypes.bool,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TelaReceitasFavoritas);\n","import React, { Component } from 'react';\nimport invokeAlert from '../helper/alertMsg';\n\nexport class notFound extends Component {\n  componentDidMount() {\n    invokeAlert(alert, 'Not Found');\n  }\n\n  render() {\n    return (\n      <div>\n        Not Found\n      </div>\n    );\n  }\n}\n\nexport default notFound;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport copy from 'clipboard-copy';\nimport { CgPentagonRight } from 'react-icons/cg';\nimport { Link } from 'react-router-dom';\nimport shareIcon from '../images/shareIcon.svg';\nimport Group26 from '../images/Group26.svg';\nimport { isLink } from '../action/action';\nimport '../css/doneRecipes.css';\n\nclass DoneRecipes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      doneRecipes: [],\n    };\n    this.handleFilterFoods = this.handleFilterFoods.bind(this);\n    this.handleFilterDrinks = this.handleFilterDrinks.bind(this);\n    this.handleFilterAll = this.handleFilterAll.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleFilterAll();\n  }\n\n  handleFilterAll() {\n    const allRecipes = JSON.parse(localStorage.getItem('doneRecipes')) || [];\n    this.setState({\n      doneRecipes: allRecipes,\n    });\n  }\n\n  handleFilterFoods() {\n    const allRecipes = JSON.parse(localStorage.getItem('doneRecipes')) || [];\n    this.setState({\n      doneRecipes: allRecipes.filter((elem) => elem.type === 'comida'),\n    });\n  }\n\n  handleFilterDrinks() {\n    const allRecipes = JSON.parse(localStorage.getItem('doneRecipes')) || [];\n    this.setState({\n      doneRecipes: allRecipes.filter((elem) => elem.type === 'bebida'),\n    });\n  }\n\n  render() {\n    const { doneRecipes } = this.state;\n    const { islink } = this.props;\n    return (\n      <section className=\"done-recipes-main\">\n        <section className=\"list-btn\">\n          <button\n            className=\"filter-btn\"\n            type=\"button\"\n            onClick={ this.handleFilterAll }\n            data-testid=\"filter-by-all-btn\"\n          >\n            All\n          </button>\n          <button\n            className=\"filter-btn\"\n            type=\"button\"\n            onClick={ this.handleFilterFoods }\n            data-testid=\"filter-by-food-btn\"\n          >\n            Food\n          </button>\n          <button\n            className=\"filter-btn\"\n            type=\"button\"\n            onClick={ this.handleFilterDrinks }\n            data-testid=\"filter-by-drink-btn\"\n          >\n            Drinks\n          </button>\n        </section>\n        <section className=\"cards-content\">\n          {\n            doneRecipes.map(({\n              type, name, id, image, area, category, alcoholicOrNot, doneDate, tags,\n            }, index) => (\n              <Card key={ name } className=\"done-card\">\n                <Link to={ `${type}s/${id}` }>\n                  <div className=\"image-content\">\n                    <img className=\"group-26\" src={ Group26 } alt={ Group26 } />\n                    <di className=\"done-shadow\">\n                      <Card.Img\n                        className=\"done-card-img\"\n                        data-testid={ `${index}-horizontal-image` }\n                        src={ image }\n                      />\n                    </di>\n                  </div>\n                </Link>\n                <Card.Body className=\"done-card-body\">\n                  <Link to={ `${type}s/${id}` }>\n                    <Card.Subtitle\n                      data-testid={ `${index}-horizontal-top-text` }\n                      className=\"done-card-subtitle\"\n                    >\n                      {\n                        (type === 'comida') ? `${area} - ${category}`\n                          : alcoholicOrNot\n                      }\n                    </Card.Subtitle>\n                    <Card.Title\n                      className=\"done-card-title\"\n                      data-testid={ `${index}-horizontal-name` }\n                    >\n                      { name }\n                    </Card.Title>\n                  </Link>\n                  <section className=\"done-buttons\">\n                    <button\n                      type=\"button\"\n                      className=\"done-btn-share\"\n                      onClick={ () => copy(`http://localhost:3000/${type}s/${id}`)\n                        .then(() => islink(true)) }\n                    >\n                      <img\n                        className=\"img-share\"\n                        data-testid={ `${index}-horizontal-share-btn` }\n                        src={ shareIcon }\n                        alt={ shareIcon }\n                      />\n                    </button>\n                  </section>\n                  <div className=\"tag-content\">\n                    {\n                      tags !== '' && tags.map((el) => (\n                        <Card.Text\n                          key={ el }\n                          data-testid={ `${index}-${el}-horizontal-tag` }\n                        >\n                          <div className=\"done-tag\">\n                            <CgPentagonRight />\n                            {el}\n                          </div>\n                        </Card.Text>))\n                    }\n                  </div>\n                  <div className=\"date-content\">\n                    <Card.Text\n                      className=\"done-date\"\n                      data-testid={ `${index}-horizontal-done-date` }\n                    >\n                      {doneDate}\n                    </Card.Text>\n                  </div>\n                </Card.Body>\n              </Card>\n            ))\n          }\n        </section>\n      </section>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  islink: (bool) => dispatch(isLink(bool)),\n});\n\nDoneRecipes.propTypes = {\n  islink: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(DoneRecipes);\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { motion } from 'framer-motion';\r\nimport Modal from '../components/Modal';\r\nimport Header from '../components/header';\r\nimport { animationScreen, transition } from '../animations';\r\nimport { getSearchBarResponse } from '../action/action';\r\nimport DoneRecipes from '../components/DoneRecipes';\r\n\r\nclass ReceitasFeitas extends Component {\r\n  componentDidMount() {\r\n    const { hasSearchBar } = this.props;\r\n\r\n    hasSearchBar(false);\r\n  }\r\n\r\n  render() {\r\n    const { location, history, link } = this.props;\r\n\r\n    return (\r\n      <motion.div\r\n        style={ { height: '100%' } }\r\n        initial=\"out\"\r\n        animate=\"end\"\r\n        exit=\"out\"\r\n        variants={ animationScreen }\r\n        transition={ transition }\r\n      >\r\n        {\r\n          link && <Modal history={ history }><p>Link copiado!</p></Modal>\r\n        }\r\n        <Header location={ location } />\r\n        <DoneRecipes history={ history } />\r\n      </motion.div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  hasSearchBar: (e) => dispatch(getSearchBarResponse(e)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  link: state.recipeDetails.link,\r\n});\r\n\r\nReceitasFeitas.propTypes = {\r\n  hasSearchBar: PropTypes.func.isRequired,\r\n  location: PropTypes.shape,\r\n  link: PropTypes.bool,\r\n  history: PropTypes.shape,\r\n}.isRequired;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReceitasFeitas);\r\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { AnimatePresence } from 'framer-motion';\nimport login from './pages/login';\nimport Comidas from './pages/comidas';\nimport Bebidas from './pages/bebidas';\nimport Perfil from './pages/telaDePerfil';\nimport Detalhes from './pages/Detalhes';\nimport Explorarcomidas from './pages/explorarComidas/ExplorarBebidasComidas';\nimport Explorar from './pages/telaDeExplorar';\nimport ExplorarIngredientes from './pages/explorarIngredientes';\nimport explorarArea from './pages/explorarArea';\nimport Progresso from './pages/Progresso';\nimport Favoritas from './pages/telaReceitasFavoritas';\nimport NotFound from './pages/notFound';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Receitas from './pages/ReceitasFeitas';\n\nclass App extends Component {\n  render() {\n    return (\n      <AnimatePresence exitBeforeEnter>\n        <Switch>\n          <Route path=\"/explorar/bebidas/area\" component={ NotFound } />\n          <Route path=\"/explorar/comidas/area\" component={ explorarArea } />\n          <Route\n            path=\"/explorar/bebidas/ingredientes\"\n            component={ ExplorarIngredientes }\n          />\n          <Route\n            path=\"/explorar/comidas/ingredientes\"\n            component={ ExplorarIngredientes }\n          />\n          <Route path=\"/explorar/comidas\" component={ Explorarcomidas } />\n          <Route path=\"/explorar/bebidas\" component={ Explorarcomidas } />\n          <Route path=\"/:page/:id/in-progress\" component={ Progresso } />\n          <Route path=\"/:page/:id\" render={ (props) => <Detalhes { ...props } /> } />\n          <Route path=\"/receitas-feitas\" component={ Receitas } />\n          <Route path=\"/receitas-favoritas\" component={ Favoritas } />\n          <Route path=\"/explorar\" component={ Explorar } />\n          <Route path=\"/perfil\" component={ Perfil } />\n          <Route path=\"/bebidas\" component={ Bebidas } />\n          <Route path=\"/comidas\" component={ Comidas } />\n          <Route exact path=\"/\" component={ login } />\n        </Switch>\n      </AnimatePresence>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { USER_EMAIL } from '../action';\n\nconst INITIAL_STATE = {\n  email: '',\n};\n\nconst userLogin = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case USER_EMAIL:\n    return {\n      ...state,\n      email: action.email,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default userLogin;\n","import {\n  IS_LOADING,\n  ALL_FOOD_RECIPES,\n  FOOD_BY_CATEGORIES,\n} from '../action';\nimport { ALL_FOOD_CATEGORIES } from '../action/action';\n\nconst INITIAL_STATE = {\n  allFoodCategories: [],\n  meals: [],\n  recipeDetails: [],\n  loader: false,\n};\n\nconst foodCategories = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case IS_LOADING:\n    return {\n      ...state,\n      loader: action.loader,\n    };\n  case ALL_FOOD_CATEGORIES:\n    return {\n      ...state,\n      allFoodCategories: action.allFoodCategories,\n    };\n  case ALL_FOOD_RECIPES:\n    return {\n      ...state,\n      meals: action.recipes,\n    };\n  case FOOD_BY_CATEGORIES:\n    return {\n      ...state,\n      meals: action.meals,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default foodCategories;\n","import { IS_LOADING, ALL_DRINKS_RECIPES, DRINK_BY_CATEGORIES,\n} from '../action';\nimport { ALL_DRINK_CATEGORIES } from '../action/action';\n\nconst INITIAL_STATE = {\n  allDrinkCategories: [],\n  drinks: [],\n  loader: false,\n};\n\nconst drinkCategories = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case IS_LOADING:\n    return {\n      ...state,\n      loader: action.loader,\n    };\n  case ALL_DRINK_CATEGORIES:\n    return {\n      ...state,\n      allDrinkCategories: action.allDrinkCategories,\n    };\n  case ALL_DRINKS_RECIPES:\n    return {\n      ...state,\n      drinks: action.recipes,\n    };\n  case DRINK_BY_CATEGORIES:\n    return {\n      ...state,\n      drinks: action.drinks,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default drinkCategories;\n","import { IS_SEARCHBAR } from '../action';\n\nconst INITIAL_STATE = {\n  searchBarOn: true,\n};\n\nconst isSearchBar = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case IS_SEARCHBAR:\n    return {\n      ...state,\n      searchBarOn: action.searchBarOn,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default isSearchBar;\n","import { INGREDIENTS } from '../action/index';\n\nconst INITIAL_STATE = {\n  recipe: [],\n};\nconst exploreIngredient = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case INGREDIENTS:\n    return {\n      ...state,\n      recipe: action.ingrediente,\n    };\n\n  default:\n    return state;\n  }\n};\nexport default exploreIngredient;\n","import {\n  RECIPE_DETAILS_FOOD,\n  RECIPE_DETAILS_DRINK,\n  START_RECIPE,\n  CHECK_PAGE,\n  CHECK_INGREDIENTS,\n  LINK,\n} from '../action';\n\nconst INITIAL_STATE = {\n  foodDatails: {},\n  drinkDatails: {},\n  details: {},\n  isStart: false,\n  isDrink: false,\n  ingredients: [],\n  link: false,\n};\n\nconst recipeDetails = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case RECIPE_DETAILS_FOOD:\n    return {\n      ...state,\n      details: action.mealsDetails,\n    };\n  case RECIPE_DETAILS_DRINK:\n    return {\n      ...state,\n      details: action.drinksDetails,\n    };\n  case START_RECIPE:\n    return {\n      ...state,\n      isStart: action.isStart,\n    };\n  case CHECK_PAGE:\n    return {\n      ...state,\n      isDrink: action.isDrink,\n    };\n  case CHECK_INGREDIENTS:\n    return {\n      ...state,\n      ingredients: action.ingredients,\n    };\n  case LINK:\n    return {\n      ...state,\n      link: action.link,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default recipeDetails;\n","import { AREA } from '../action/index';\n\nconst INITIAL_STATE = {\n  country: [],\n};\nconst foodArea = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case AREA:\n    return {\n      ...state,\n      country: action.AreaDetails,\n    };\n\n  default:\n    return state;\n  }\n};\nexport default foodArea;\n","import { combineReducers } from 'redux';\nimport userLogin from './userLogin';\nimport foodCategories from './foodCategories';\nimport drinkCategories from './drinkCategories';\nimport isSearchBar from './isSearchBar';\nimport exploreIngredient from './exploreScreen';\nimport recipeDetails from './recipeDetails';\nimport foodArea from './foodArea';\n\nconst rootReducers = combineReducers({\n  userLogin,\n  foodCategories,\n  drinkCategories,\n  isSearchBar,\n  exploreIngredient,\n  recipeDetails,\n  foodArea,\n});\n\nexport default rootReducers;\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk),\n    window.devToolsExtension ? window.devToolsExtension() : (f) => f,\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <BrowserRouter basename={ process.env.PUBLIC_URL }>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Group26.0db868c0.svg\";","module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.df74dfb2.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/image8.d36e2f9e.png\";"],"sourceRoot":""}